;Converted to txt and translated with an LLM from https://www.voja.rs/galaksija/ROM%20B%20Listing%20Scans/ROM_B_listing.htm
;NOT TESTED

             00010 ;********************************************************
             00020 ;*                                                      *
             00030 ;*         "GALAKSIJA" ROM B                            *
             00040 ;*                                                      *
             00050 ;*                             VOJA ANTONIÄ† 12.07.84.   *
             00060 ;*                                                      *
             00070 ;********************************************************
             00080
             00090
005A         00100 SPACE    EQU     90
2A97         00110 SHOMEM   EQU     2A97H
2BB2         00120 SHOFOR   EQU     2BB2H
2BB3         00130 OPTION   EQU     2BB3H
2BD0         00140 FIELD    EQU     2BB6H+34
2BDD         00150 INS1     EQU     FIELD+5
2BDE         00160 INS2     EQU     INS1+1
2BE1         00170 INS3     EQU     INS2+3
2BE4         00180 IXIY     EQU     INS3+3
2BE5         00190 CODE     EQU     IXIY+1
2BEA         00200 ADDR     EQU     CODE+5
2BEC         00210 TEXTBR   EQU     ADDR+2
2BED         00220 TEMP1    EQU     TEXTBR+1
2BEF         00230 TEMP2    EQU     TEMP1+2
2AAA         00240 KRUG     EQU     2AAAH
2AAB         00250 FLAG2    EQU     2AABH
2BF2         00260 FREE     EQU     TEMP2+3
2BF4         00270 IXPOS2   EQU     FREE+2
2BF6         00280 DISPL    EQU     IXPOS2+2
2BB5         00290 FLAG     EQU     2BB5H
             00300
0B32         00310 PLUS     EQU     0B32H
0B1E         00320 MINUS    EQU     0B1EH
0AE6         00330 PUTA     EQU     0AE6H
0AF7         00340 KROZ     EQU     0AF7H
0B10         00350 CPIXIX   EQU     0B10H
             00360
1000         00370          ORG     1000H
             00380
1000 2A6A2A  00390          LD      HL,(2A6AH)    ; IF (ENDMEM)=0 THEN (ENDMEM)=0FFFFH
1003 7C      00400          LD      A,H
1004 B5      00410          OR      L
1005 2004    00420          JR      NZ,NOT56K     ; ENDMEM > 0
1007 2B      00430          DEC     HL            ; CORRECTED ENDMEM
1008 226A2A  00440          LD      (2A6AH),HL
100B 3E0C    00450 NOT56K   LD      A,0CH
100D 1813    00451          JR      GOINI
             00540
             00550
100F E3      00560 ZALINK   EX      (SP),HL
1010 D5      00570          PUSH    DE
1011 115B07  00580          LD      DE,75BH       ; THIS IS THE POSITION WHERE IT WOULD JUMP IF NOT...
1014 D7      00590          RST     10H           ; ...RECOGNIZED WORD IN BASIC PROGRAM
1015 201D    00600          JR      NZ,DRUGIP
1017 21F01D  00610          LD      HL,TEXT1-1    ; TABLE OF NEW WORDS
101A D1      00620          POP     DE
101B F1      00630 CASE1    POP     AF
101C C39A03  00640          JP      39AH          ; RECOGNIZE NEW WORD; IF IT DOESN'T EXIST IN TABLE...
101F C35B07  00650 KAO75B   JP      75BH          ; ...JUMP TO 10FH, THEN TO 75BH (SEE Z100)
             00651
1022 E7      00652 GOINI    RST     20H
1023 3E0C    00653          LD      A,0CH         ; NEW HORIZONTAL POSITION
1025 32AB2B  00654          LD      (2BABH),A
1028 21A110  00655          LD      HL,LINKS      ; INSERT JP INSTEAD OF RET IN LINKS
102B 11A92B  00656          LD      DE,2BA9H
102E 010600  00657          LD      BC,6
1031 EDB0    00658          LDIR                  ; INITIALIZATION OF ROM-A 2

1033 C9     00659         RET
            00660
1034 118E04 00670 DRUGIP  LD      DE,48EH         ; SECOND ATTEMPT: CHECK IF IT'S CORRECTLY RECOGNIZED...
1037 D7     00680         RST     10H             ; WORD 'PRINT', IF IT IS, CHECK WHAT FOLLOWS
1038 2013   00690         JR      NZ,TRECIP
103A D1     00700         POP     DE
103B E3     00710         EX      (SP),HL
103C F1     00720         POP     AF
103D DF     00730         RST     18H
103E 25     00740         DEFB    '%'
103F 0A     00750         DEFB    KAO48E-$-1
1040 CF     00760         RST     8
1041 3E20   00770         LD      A,' '        ; WRITE BLANK
1043 E7     00780         RST     20H
1044 CD4C13 00790         CALL    HEX16B      ; WRITE NUMBER IN HEX FORMAT
1047 C3AD04 00800         JP      4ADH
104A C38E04 00810 KAO48E JP      48EH        ; CONTINUES WHERE IT STARTED IF '%' DOESN'T FOLLOW
            00820
104D 117707 00830 TRECIP  LD      DE,777H     ; THIRD ATTEMPT: CHECK IF IT TRIED TO RECOGNIZE...
1050 D7     00840         RST     10H         ;  ...FUNCTION, BUT FAILED (777H IS ADDRESS...
1051 D1     00850         POP     DE          ;  ...TO WHICH IT WOULD JUMP IN THAT CASE)
1052 E3     00860         EX      (SP),HL
1053 C0     00870         RET     NZ
1054 21231E 00880         LD      HL,TEXT3-1  ; TABLE OF NEW FUNCTIONS
1057 18C2   00890         JR      CASE1       ; END IS SAME AS IN FIRST ATTEMPT
1059 C37707 00900 KAO777 JP      777H
            00910
105C 018004 00920 LPRINT  LD      BC,480H     ; 'LPRINT' ENTRY POINT: RET ADDRESS TO 'PRINT'
105F C5     00930         PUSH    BC          ; GOES TO STACK
1060 3EFF   00940 COPY    LD      A,0FFH      ; SETS LPRINT FLAG
1062 32B52B 00950         LD      (FLAG),A
1065 C9     00960         RET
            00970
1066 CD6010 00980 LLIST   CALL    COPY        ; 'LLIST' ENTRY POINT: SET FLAG
1069 CDD30C 00990         CALL    0CD3H       ; CONTINUE AS LLIST
106C C36404 01000         JP      464H
            01010
106F F5     01020 VIDEO   PUSH    AF          ; ADDITION TO SUBPROGRAM THAT WRITES CHARACTER TO...
1070 2AB52B 01030         LD      HL,(FLAG)   ; ...VIDEO MEM (958H, BUT HERE IS CHECKING...
1073 2C     01040         INC     L           ; IS THE FLAG FOR PRINTER SET?
1074 2021   01050         JR      NZ,NCOPY    ; IF NOT, EXIT
1076 21AB2A 01060         LD      HL,2AABH    ; CHECK IF FLAG IS SET TO NOT WRITE...
1079 CB46   01070         BIT     0,(HL)      ; ...CONTROL CHARS?
107B 200E   01080         JR      NZ,STAND    ; IF YES, SKIP CHARACTER CHANGE
107D 219910 01090         LD      HL,TABCZS   ; IF NOT, POINTER TO TABLE
1080 0604   01100         LD      B,4         ; TOTAL 4 CHARS FOR COMPARISON
1082 BE       01110 TEST4   CP      (HL)        ; IS THIS THE SEARCHED WORD?
1083 23       01120         INC     HL
1084 2804     01130         JR      Z,FOUND4    ; YES, JUMP
1086 23       01140         INC     HL
1087 10F9     01150         DJNZ    TEST4       ; TRY NEXT
1089 26       01160         DEFB    26H         ; AS 'LD H,ZEH' - TO SAVE MEMORY...
108A 7E       01170 FOUND4  LD      A,(HL)      ; ...SKIP NEXT WORD
108B F5       01180 STAND   PUSH    AF          ; ...SAVE NEW WORD
108C CDFF02   01190 RDY     CALL    2FFH        ; 'BREAK' TEST
108F DBFF     01200         IN      A,(255)
1091 17       01210         RLA
1092 38F8     01220         JR      C,RDY       ; JUMP IF PRINTER IS BUSY
1094 F1       01230         POP     AF
1095 D3FF     01240         OUT     (255),A     ; PRINTER FREE - SEND CHARACTER
1097 F1       01250 NCOPY   POP     AF
1098 C9       01260         RET
              01270
1099 5B       01280 TABCZS  DEFB    91         ; = C caron
109A 43       01290         DEFB    'C'
109B 5C       01300         DEFB    92          

109C 43       01310        DEFB    'C'         ; = C acute
109D 5D       01320        DEFB    93          
109E 5A       01330        DEFB    'Z'         ; = Z caron
109F 5E       01340        DEFB    94
10A0 53       01350        DEFB    'S'         ; = S caron
              01360
              01370
10A1 C3       01380 LINK   DEFB    0C3H
10A2 0F10     01390        DEFW    ZALINK      ; CHECK LINE 655 (C3H=JP)
10A4 C3       01400        DEFB    0C3H
10A5 6F10     0141         DEFW    VIDEO
              01420
10A7 2A9F2A   01430 GO4SS  LD      HL,(2A9FH)  ; ********** ASSEMBLER **********
10AA 7C       01440        LD      A,H         ; IS IT COMMAND MODE?
10AB B5       01450        OR      L
10AC CA5A06   01460        JP      Z,1626D     ; IF YES
10AF EB       01470        EX      DE,HL       ; MAIN POINTER WILL BE HL
10B0 3E01     01480        LD      A,1         ; SET OPT 1
10B2 32B32B   01490        LD      (OPTION),A
10B5 CDB610   01500        CALL    START1      ; CALL PROGRAM FOR ASSEMBLY
10B8 DD21AC2A 01510        LD      IX,2AACH    ; RETURN CORRECT VALUE IX REGISTER
10BC 2B       01520        DEC     HL
10BD EB       01530        EX      DE,HL       ; RETURN POINTER DE
10BE F7       01540        RST     30H         ; GO BACK TO BASIC
              01550
10BF AF       01560 START1 XOR     A
10C0 32AA2A   01570        LD      (KRUG),A    ; FIRST ASSEMBLY PASS
10C3 32DD2B   01580        LD      (INS1),A    ; EXECUTE OPCODE TOKEN
10C6 EB       01590        EX      DE,HL       ; SAVE HL IN DE
10C7 EF       01600        RST     28H         ; THIS IS LD HL,0
10C8 22F62B   01610        LD      (DISPL),HL
10CB 22972A   01620        LD      (SHOMEM),HL ; FOR 'REG'; SHOWS 0 BYTES OF MEMORY
10CE 2A6A2A   01630        LD      HL,(2A6AH)  ; = ENDMEM
10D1 2B       01640        DEC     HL
10D2 77       01650        LD      (HL),A      ; 0 = TERMINATOR TABLE FOR LABELS
10D3 2B       01660        DEC     HL
10D4 77       01670        LD      (HL),A
10D5 EB       01680        EX      DE,HL       ; RETURN HL
10D6 CD5217   01690        CALL    FINDCR      ; FIND END OF LINE WHERE IS '<'
10D9 E5       01700        PUSH    HL          ; SAVE POINTER FOR SECOND PASS
10DA CDE610   01710        CALL    ASS         ; FIRST ASSEMBLY PASS
10DD 21AA2A   01720        LD      HL,KRUG
10E0 34       01730        INC     (HL)        ; SET SECOND PASS
10E1 AF       01740        XOR     A
10E2 32DD2B   01750        LD      (INS1),A    ; EXECUTE OPCODES
10E5 E1       01760        POP     HL          ; RETURN POINTER TO START 1...
10E6 AF       01770 ASS    XOR     A           ; ...ENTER IN SECOND PASS
10E7 32EC2B   01780        LD      (TEXTBR),A  ; 0 WORDS IN TEXT
10EA 32EA2B   01790        LD      (ADDR),A    ; ERASE LABEL ADDRESS IN PROGRAM
10ED 32EB2B   01800        LD      (ADDR+1),A
10F0          01810 LOOP   EQU     $           ; FOLLOWING 13 LINES ARE MAIN LOOP
10F0 229F2A   01820        LD      (2A9FH),HL  ; POSITION OF CURRENT LINE(FOR ERROR CASE)
10F3 ED5B382C 01830        LD      DE,(2C38H)  ; END OF BASIC
10F7 D7       01840        RST     10H         
10F8 D0       01850        RET     NC          ; RETURN IF IT'S END AND NO '>'
10F9 3ADD2B   01860        LD      A,(INS1)
10FC FE08     01870        CP      8
10FE C8       01880        RET     Z           ; RETURN IF IT'S '>'
10FF CDFF02   01890        CALL    2FFH        ; 'BREAK' TEST
1102 CD3317   01900        CALL    PROG1       ; FIRST PART: PUTTING TOKEN IN TABLE
1105 E5       01910        PUSH    HL
1106 CD0C11   01920        CALL    PROG2       ; SECOND PART: CODE FORMING
1109 E1       01930        POP     HL
110A 18E4     01940        JR      LOOP        ; BACK TO MAIN LOOP
              01950
              01960

110C 214D12   01970 PROG2  LD      HL,GOON     ; THIS IS RET ADDRESS FOR END OF SUBROUTINE
110F E5       01980        PUSH    HL
1110 21DE2B   01990        LD      HL,INS2
1113 DD21DB2B 02000        LD      IX,FIELD+3
1117 3ADD2B   02010        LD      A,(INS1)
111A B7       02020        OR      A
111B C8       02030        RET     Z           ; NOTHING IN THIS LINE - GO TO GOON
111C FE09     02040        CP      9           ; IS IT SPECIAL WORD (TOKEN=9)
111E D22413   02050        JP      NC,NCOMM    ; NO - NEXT WORD FOR ASSEMBLY
1121 3D       02060        DEC     A
1122 2027     02070        JR      NZ,NSTAT    ; NOT TOKEN 1
1124 217819   02080        LD      HL,BRKPT    ; TOKEN 1: 'REG' (BREAKPOINT)
1127 22E62B   02090        LD      (CODE+1),HL ; BREAKPOINT ADDRESS
112A 3ECD     02100        LD      A,0CDH      ; CODE FOR 'CALL'
112C 32E52B   02110        LD      (CODE),A
112F 3E03     02120        LD      A,3
1131 32E92B   02130        LD      (CODE+4),A  ; 3 BYTES CODED LENGTH
1134 2ADF2B   02140        LD      HL,(INS2+1) ; IS THERE MEMORY DISPLAY?
1137 7C       02150        LD      A,H
1138 B5       02160        OR      L
1139 C8       02170        RET     Z           ; NO - GO TO GOON
113A CD1813   02180        CALL    IFNUM2      ; IS IT NUMERIC VALUE (IF NOT-WHAT?)
113D 22972A   02190        LD      (SHOMEM),HL ; SHOW HL MEMORY
1140 3AE22B   02200        LD      A,(INS3+1)  ; HOW MANY ROWS?
1143 B7       02210        OR      A
1144 2001     02220        JR      NZ,IMA      ; NUMBER OF ROWS SPECIFIED
1146 3C       02230        INC     A           ; NOT SPECIFIED - THEN 1 ROW
1147 32B22B   02240 IMA    LD      (SHOFOR),A  ; = SHOW FORMAT
114A C9       02250        RET
              02260
114B 3D       02270 NSTAT  DEC     A
114C 2021     02280        JR      NZ,NTEXT    ; NOT TOKEN 2
114E 7E       02290        LD      A,(HL)      ; TOKEN 2: 'TEXT'
114F 32EC2B   02300        LD      (TEXTBR),A  ; NUMBER OF TEXT WORDS
1152 11E52B   02310        LD      DE,CODE
1155 0603     02320 TEXTIT LD      B,3         ; 3 BYTES IN ONE ROW
1157 3AEC2B   02330 TXT4   LD      A,(TEXTBR)  ; HOW MANY WORDS LEFT?
115A B7       02340        OR      A
115B C8       02350        RET     Z           ; NONE - GO TO GOON
115C DD3511   02360        DEC     (IX+17)     ; DECREASE WORD COUNT
115F 2ADF2B   02370        LD      HL,(INS2+1) ; TEXT ADDRESS IN PROGRAM
1162 7E       02380        LD      A,(HL)      ; TAKE WORD OR CHARACTER
1163 23       02390        INC     HL          ; INCREASE POINTER
1164 22DF2B   02400        LD      (INS2+1),HL ; AND RETURN IT
1167 12       02410        LD      (DE),A      ; PUT CHARACTER IN CODE
1168 13       02420        INC     DE          ; INCREASE CODE POINTER
1169 DD348E   02430        INC     (IX+14)     ; INCREASE BYTE COUNT
116C 10E9     02440        DJNZ    TXT4        ; DO THIS 3 TIMES IN EACH ROW
116E C9       02450        RET                 ; GO TO GOON
116F 3D       02460 NTEXT  DEC     A
1170 2004     02470        JR      NZ,NWORD    ; NOT TOKEN 3
1172 3C       02480        INC     A           ; TOKEN 3: 'WORD'
1173 DD770E   02490        LD      (IX+14),A   ; BYTE COUNT=1 (AND ON 5120 WILL BE +1)
1176 3D       02500 NWORD  DEC     A
1177 200C     02510        JR      NZ,NBYTE    ; NOT TOKEN 4 OR 3
1179 CD1813   02520        CALL    IFNUM1      ; TOKEN 4: 'BYTE'
117C 2ADF2B   02530        LD      HL,(INS2+1) ; TAKE CODE
117F 22E52B   02540        LD      (CODE),HL   ; PUT IT IN ITS PLACE
1182 C34813   02550        JP      IXGOON      ; SEE 5120
              02560
1185 3D       02570 NBYTE  DEC     A
1186 2023     02580        JR      NZ,NOPT     ; NOT TOKEN 5
1188 CD1813   02590        CALL    IFNUM2      ; TOKEN 5: 'OPT' (IF >255, WHAT)
118B 2ADF2B   02600        LD      HL,(INS2+1) ; TAKE NUMBER OPTION
118E 7D       02610        LD      A,L         ; U A REG
118F E604     02620        AND     4           ; IF BIT 2 IS SET (4-5-6-7)
;new page
1191 C46810   02630       CALL NZ,COPY      ; SET FLAG FOR PRINTER
1194 7D       02640       LD A,L
1195 E603     02650       AND 3
1197 32B32B   02660       LD (OPTION),A   ; MASK TO BE LESS THAN 4
119A 3AE12B   02670       LD A,(INS3)
119D B7       02680       OR A            ; IS RELOCATION REQUESTED ON WRITE?
119E C8       02690       RET Z           ; NO - GO TO GOON
119F FE40     02700       CP 40H
11A1 C22D19   02710       JP NZ,WHATHL    ; NOT NUMERIC - ERROR
11A4 2AE22B   02720       LD HL,(INS3+1)  ; RELOCATION SIZE...
11A7 22F62B   02730       LD (DISPL),HL   ; ...TO ITS PLACE
11AA C9       02740       RET

11AB 3D       02760 NOPT  DEC A
11AC 2000     02770       JR NZ,NORG      ; NOT TOKEN 6
11AE CD1813   02780       CALL IFNUM1     ; TOKEN 6: 'ORG'
11B1 2ADF2B   02790       LD HL,(INS2+1)
11B4 22ED2B   02800       LD (TEMP1),HL   ; TEMPORARY ADDRESS
11B7 22EA2B   02810       SKR4 LD (ADDR),HL ; MAIN POINTER OF PC ADDRESS
11BA C9       02820       RET

11BB 3D       02850 NORG DEC A
11BC C0       02860       RET NZ          ; END = TOKEN 8 '>'
11BD CD1813   02870       CALL IFNUM1     ; TOKEN 7: 'EQU'
11C0 ED4BDF2B 02880       LD BC,(INS2+1)
11C4 ED43ED2B 02890       LD (TEMP1),BC  ; LABEL ADDRESS
11C8 CDD211   02900       CALL CREATE     ; FORM LABEL
11CB CA2D19   02910       JP Z,WHATHL     ; IF NOT PROVIDED - WHAT
11CE F1       02920       POP AF          ; RESTORE STACK - WON'T GO TO GOON
11CF C35412   02930       JP GOON1        ; BUT TO GOON1

11D2 3AAA2A   02960 CREATE LD A,(KRUG) ; ---- LABEL FORMATION ----
11D5 B7       02970       OR A
11D6 C0       02980       RET NZ          ; CANNOT BE FORMED IN SECOND PASS
11D7 2ADA2B   02990       LD HL,(FIELD+2)
11DA 7C       03000       LD A,H
11DB B5       03010       OR L
11DC C8       03020       RET Z           ; RETURN IF LABEL ADDRESS DOESN'T EXIST
11DD CD1512   03030       CALL LOCAT2     ; CHECK IF IT'S ALREADY FORMED
11E0 CA4F16   03040       JP Z,HOWHL      ; IF IT EXISTS - CANNOT BE FORMED TWICE (HOW?)

11E3 E5       03050 TRANSF PUSH HL
11E4 2A382C   03060 LD HL,(2C38H)   ; END OF BASIC PROGRAM
11E7 D7       03070 RST 10H
11E9 E1       03080 POP HL
11E9 D25301   03090 JP NC,339D      ; SORRY - NO MEMORY
11EC 7E       03100 LD A,(HL)
11ED 12       03110 LD (DE),A       ; TRANSFER LETTER BY LETTER TO TABLE
11EE 23       03120 INC HL
11EF 1B       03130 DEC DE
11F0 CD5818   03140 CALL NCSLBR     ; IF LETTER OR NUMBER
11F3 30EE     03150 JR NC,TRANSF    ; ...CONTINUE WITH TRANSFER
11F5 EB       03160 NOTRAN EX DE,HL
11F6 23       03170 INC HL
11F7 CBFE     03180 SET 7,(HL)      ; WORD TERMINATOR = BIT 7 SET
11F9 2B       03190 DEC HL
11FA 72       03200 LD (HL),B       ; BC = LABEL VALUE
11FB 2B       03210 DEC HL
11FC 71       03220 LD (HL),C
11FD 2B       03230 DEC HL
11FE 3600     03240 LD (HL),0       ; TABLE TERMINATOR
1200 EB       03250 EX DE,HL        ; HL = POINTER NOW BEHIND NAME
1201 AF       03260 XOR A           ; RESET Z FLAG (SIGN THAT EVERYTHING IS OK)
1202 3C       03270 INC A           ; NEW POSITION IN TABLE
1203 C9       03280 RET
;new page
1204 3AAA2A   03300 LOCATE  LD    A,(KRUG)    ; ---- LOOP LABEL ----
1207 B7       03310         OR    A
1208 200B     03320         JR    NZ,LOCAT2   ; ONLY IN SECOND LOOP
120A 2B       03330         DEC   HL          ; AND IN 1. LOOP JUST SKIP NAME
120B 23       03340 SRC20H  INC   HL
120C CD5018   03350         CALL  NCSLBR
120F 30FA     03360         JR    NC,SRC20H
1211 AF       03370         XOR   A
1212 47       03380         LD    B,A
1213 4F       03390         LD    C,A
1214 C9       03400         RET
              03410
1215 E5       03420 LOCAT2  PUSH  HL
1216 D9       03430         EXX
1217 2A6A2A   03440         LD    HL,(2A6AH)  ; END OF MEMORY (START OF COMPARISON)
121A 2B       03450         DEC   HL
121B 1812     03460         JR    IFF1R       ; START
121D D1       03470 GOSRCH  POP   DE          ; RECONSTRUCT POINTER
121E D5       03480         PUSH  DE
121F 1A       03490 GOSRC2  LD    A,(DE)      ; TAKE FROM PROGRAM TEXT
1220 BE       03500         CP    (HL)        ; AND COMPARE WITH LABEL LIST
1221 2816     03510         JR    Z,FOUNDV    ; ONE WORD MATCHES
1223 F680     03520         OR    80H         ; SET BIT 7 (AS IN THE LAST CHARACTER)
1225 BE       03530         CP    (HL)        ; AND COMPARE AGAIN (MAYBE IT'S THE END)
1226 2815     03540         JR    Z,BASFDU    ; STILL - SUCCESSFUL COMPARISON
1228 CB7E     03550 SRCHV   BIT   7,(HL)      ; NO - FIND END OF THIS NAME IN LIST
122A 2B       03560         DEC   HL
122B 28FB     03570         JR    Z,SRCHV     ; NOT THE END YET
122D 2B       03580         DEC   HL          ; SKIP VALUE IN LIST
122E 2B       03590         DEC   HL          ; ONE MORE BYTE
122F 7E       03600 IFF1R   LD    A,(HL)      ; NEXT NAME (FIRST CHARACTER)
1230 B7       03610         OR    A           ; MAYBE IT'S NULL (TERMINATOR TABLE)?
1231 20EA     03620         JR    NZ,GOSRCH   ; NO - CONTINUE COMPARISON
1233 E5       03630         PUSH  HL          ; TRANSFER HL TO DE
1234 D9       03640         EXX               ; ...OF ALTERNATIVE SET
1235 D1       03650         POP   DE          ; DE = NEW POSITION IN TABLE
1236 E1       03660         POP   HL          ; RECONSTRUCT HL
1237 3C       03670         INC   A           ; A=1 (SIGN THAT NAME NOT FOUND)
1238 C9       03680         RET
1239 2B       03690 FOUNDV  DEC   HL          ; COMPARISON GOING WELL
123A 13       03700         INC   DE          ; GO TO NEW CHARACTER
123B 18E2     03710         JR    GOSRC2      ; CONTINUE COMPARISON
123D 13       03720 BASFDU  INC   DE          ; GO TO NEW CHARACTER IN PROGRAM
123E EB       03730         EX    DE,HL
123F CD5018   03740         CALL  NCSLBR      ; IF IT'S WORD OR NUMBER, RESET CARRY
1242 EB       03750         EX    DE,HL
1243 30E3     03760         JR    NC,SRCHV    ; SO SAY LONG-NO SUCCESSFUL COMPARISON
1245 2B       03770         DEC   HL          ; FULLY SUCCESSFUL COMPARISON; GO TO VALUE
1246 46       03780         LD    B,(HL)      ; HIGH BYTE
1247 2B       03790         DEC   HL
1248 4E       03800         LD    C,(HL)      ; BC = VALUE
1249 EB       03810         EX    DE,HL       ; HL = POINTER TO NAME
124A D1       03820         POP   DE          ; DE = START POINTER
124B AF       03830         XOR   A           ; A = 0 (SIGN THAT NAME IS FOUND IN LIST)
124C C9       03840         RET
              03850
              03860
124D ED4BEA2B 03870 GOON    LD    BC,(ADDR)   ; ---- END OF PROCESSING ONE WORD ----
1251 CDD211   03880         CALL  CREATE      ; CREATE NEW LABEL IF EXISTS
1254 11E42B   03890 GOON1   LD    DE,IXIY     ; DE POINTS TO IXIY FLAG IN RAM-U
1257 1A       03900         LD    A,(DE)
1258 B7       03910         OR    A           ; IS THERE SOMETHING HERE?
1259 200B     03920         JR    NZ,IMAGA    ; JUMP IF INSTRUCTION REFERS TO IX OR IY
125B 21E52B   03930         LD    HL,CODE     ; NO - CHECK CODE FOR ONE POSITION LOWER
125E 010400   03940         LD    BC,4
;new page
1261 EDB8     03950         LDIR
1263 12       03960         LD    (DE),A      ; PUT NULL IN LAST BYTE
1264 1817     03970         JR    PRES1
1266 FEED     03980 IMAGA   CP    0EDH        ; IS IT 0EDH?
1268 2813     03990         JR    Z,PRES1     ; IF YES-THEN NEITHER IX NOR IY
126A 21E92B   04000         LD    HL,FIELD+17 ; HL POINTS TO NUMBER OF BYTES THAT
126D 34       04010         INC   (HL)        ; INCREASES IT
126E DD7E03   04020         LD    A,(IX+3)    
1271 FE86     04030         CP    86H         ; IS THE OPERAND 1...
1273 2805     04040         JR    Z,F1        ; ...IX IN BRACKETS?
1275 DD7E06   04050         LD    A,(IX+6)    ; IF YES JUMP
1278 FE86     04060         CP    86H         ; OR MAYBE OPERAND 2...
127A CCF71F   04070 F1      CALL  Z,EXTRA     ; ...IX IN BRACKETS?
              04080                           ; IF YES CALL EXTRA SERVICE
127D DD460E   04090 PRES1   LD    B,(IX+14)
1280 04       04100         INC   B
1281 05       04110         DEC   B           ; IF IT'S NULL, SKIP
1282 CA1013   04120         JP    Z,NEMABY
1285 2AEA2B   04130         LD    HL,(ADDR)   ; TAKE PROGRAM COUNTER
1288 CD5713   04140         CALL  HEX16       ; WRITE VALUE
128B 3E20     04150         LD    A,' '       ; BLANK
128D CD7013   04160         CALL  ZAPRIN
1290 11E42B   04170 PRVIK1  LD    DE,IXIY
1293 3AAA2A   04180 PUTABY  LD    A,(KRUG)
1296 B7       04190         OR    A           ; WHICH ASSEMBLY PASS IS THIS
1297 2820     04200         JR    Z,PRVIK     ; IF FIRST - SKIP
1299 C5       04210         PUSH  BC
129A 45       04220         LD    B,L         ; B = LOW BYTE OF PROGRAM COUNTER
129B 0EFD     04230         LD    C,253       ; OUTPUT ADDRESS FOR HIGH BYTE
129D ED61     04240         * OUT  (C),H      ; HIGH BYTE GOES TO LATCH EMULATOR
129F 0C       04250         INC   C           ; NEW OUTPUT ADDRESS
12A0 3AB32B   04260         LD    A,(OPTION)
12A3 E602     04270         AND   2
12A5 1A       04280         LD    A,(DE)      ; TAKE BYTE CODE
12A6 ED79     04290         * OUT  (C),A      ; SEND TO EMULATOR
12A8 C1       04300         POP   BC
12A9 280A     04310         JR    Z,NOWMR     ; IF SELECTED OPTION DOESN'T REQUIRE WRITING...
12AB E5       04320         PUSH  HL          ; ...TO MEMORY - SKIP
12AC D5       04330         PUSH  DE
12AD ED5BF62B 04340         LD    DE,(DISPL)  ; IS THERE RELOCATION WRITING?
12B1 19       04350         ADD   HL,DE       ; ADD RELOCATION VALUE
12B2 77       04360         LD    (HL),A      ; ****** WRITE BYTE TO MEMORY ******
12B3 D1       04370         POP   DE
12B4 E1       04380         POP   HL
12B5 CD5C13   04390 NOWMR   CALL  HEX8        ; PRINT BYTE ON SCREEN
12B8 13       04400         INC   DE
12B9 23       04410 PRVIK   INC   HL          ; INCREASE POINTERS
12BA 10D7     04420         DJNZ  PUTABY      ; RETURN AS MANY TIMES AS YOU HAVE BYTES
12BC 22EA2B   04430         LD    (ADDR),HL   ; NEW ADDRESS OF PROGRAM COUNTER
12BF 3AEC2B   04440         LD    A,(TEXTR)   ; IS THERE ANY CODE TEXT?
12C2 B7       04450         OR    A
12C3 2811     04460         JR    Z,NEMAB1    ; IF NOT - JUMP
12C5 3E0D     04470         LD    A,0DH       ; IMA - NEW LINE
12C7 CD7013   04480         CALL  ZAPRIN
12CA DD360E00 04490         LD    (IX+14),0   ; NUMBER OF BYTES = 0
12CE 11E42B   04500         LD    DE,CODE-1   ; TAKE NEW 3 BYTES OF TEXT
12D1 CD5511   04510         CALL  TEXTIT
12D4 18A7     04520         JR    PRES1       ; CONTINUE IF WORKING WITH TEXT
12D6 3AAA2A   04530 NEMAB1  LD    A,(KRUG)
12D9 B7       04540         OR    A
12DA C8       04550         RET   Z           ; RETURN IF IT'S FIRST PASS
12DB 3AB32B   04560         LD    A,(OPTION)
12DE 1F       04570         RRA
12DF D0       04580         RET   NC          ; RETURN IF PRINTING IS NOT REQUIRED
12E0 3A682A   04590 GOBL    LD    A,(2A68H)   ; CURSOR POSITION
12E3 E61F     04600         AND   1FH         ; TAKE ONLY POSITION IN LINE
;new page
12E5 FE0B     04610         CP    0BH         ; IS IT LESS THAN 11
12E7 3805     04620         JR    NC,VEC11    ; NO - SKIP
12E9 3E20     04630         LD    A,20H       ; BLANK
12EB E7       04640         RST   20H
12EC 18F2     04650         JR    GOBL        ; WRITE BLANKS UNTIL YOU REACH TAB(11)
12EE ED5B9F2A 04660 VEC11   LD    DE,(2A9FH)  ; TAKE POSITION OF CURRENT LINE
12F2 CD6F19   04670         CALL  RELIX1      ; PREPARE IX FOR ARITHMETIC
12F5 3AB32B   04680         LD    A,(OPTION)  ; WHICH OPTION?
12F8 1F       04690         RRA
12F9 3010     04700         JR    NC,RELIX2   ; IF NOT PRINT TO SCREEN
12FB CDED08   04710         CALL  08EDH       ; WRITE PROGRAM LINE NUMBER
12FE 3AD82B   04720         LD    A,(FIELD+3) ; IS THERE A LABEL?
1301 B7       04730         OR    A
1302 2004     04740         JR    NZ,UVUCI    ; EXISTS - LEAVE CURSOR WHERE IT IS
1304 3E20     04750         LD    A,' '       ; BLANK
1306 E7       04760         RST   20H         ; ONCE
1307 E7       04770         RST   20H         ; TWICE
1308 CD3409   04780 UVUCI   CALL  934H        ; WRITE PROGRAM LINE TEXT
130B DD2AF42B 04790 RELIX2  LD    IX,(IXPOS2) ; RESTORE OLD IX
130F C9       04800         RET               ; FINISHED WITH LINE PROCESSING
1310 2AE02B   04810 NEMABY  LD    HL,(TEMP1)  ; ONLY PROGRAM COUNTER
1313 CD5713   04820         CALL  HEX16       ; WRITE IT
1316 18BE     04830         JR    NEMAB1      ; AND WRITE LINE NUMBER AND TEXT
              04840
1318 CD9314   04850 IFNUM1  CALL  TEST3       ; ** IF THERE IS SECOND OPERAND...
131B 3ADE2B   04880 IFNUM2  LD    A,(INS2)    ; ...OR FIRST IS NOT NUMERIC...
131E FE40     04890         CP    40H         ; ...THEN WHAT
1320 C8       04900         RET   Z           ; ** IF FIRST OPERAND IS NOT...
1321 C32D19   04910 ZASN    JP    WHATHL      ; ...NUMERIC - THEN WHAT
              04920
1324 3D       04930 NCOMM   DEC   A           ; CHECK IF IT'S A SIMPLE INSTRUCTION...
1325 4F       04940         LD    C,A
1326 FE2A     04950         CP    2AH         ; ...(GROUP 2) ILI ED+ (GROUP3)
1328 D28213   04960         JP    NC,CBPLUS   ; IF NOT ONE OR THE OTHER, GO ON
132B 0606     04970         LD    B,6         ; TEST 6 BYTES
132D AF       04980         XOR   A           ; IN GROUP 'INS2' AND 'INS3'
132E B6       04990 XX6     OR    (HL)
132F 23       05000         INC   HL
1330 10FC     05010         DJNZ  XX6         ; IF ANY OPERAND EXISTS
1332 20ED     05020         JR    NZ,ZASN     ; THEN GO TO WHAT
1334 79       05030         LD    A,C
1335 FE15     05040         CP    15H         ; IS IT ED+
1337 3807     05050         JR    C,NOED      ; IF NOT SKIP
1339 DD360F0D 05060         LD    (IX+9),0EDH ; STORE ED
133D DD340E   05070         INC   (IX+14)     ; INCREASE NUMBER OF BYTES
1340 21761E   05080 NOED    LD    HL,TABY1-8  ; FIND CODED BYTE IN TABLE
1343 09       05090         ADD   HL,BC       ; ...COLLECTION...
1344 7E       05100         LD    A,(HL)      ; TAKE IT FROM TABLE
1345 DD770A   05110         LD    (IX+10),A   ; AND PUT IT IN ITS PLACE
1348 DD340E   05120 IXGOON  INC   (IX+14)     ; INCREASE NUMBER OF BYTES
134B C9       05130         RET               ; DONE
134C 3E26     05150 HEX16B  LD    A,'&'       ; ****** WRITE IN HEX FORMAT HL UNCONDITIONALLY
134E E7       05160         RST   20H         ; FIRST WRITE CHARACTER '&' IN HEX NUMBER
134F 3E01     05170         LD    A,1         ; SET PRINTING CONDITIONS
1351 32B32B   05180         LD    (OPTION),A
1354 32AA2A   05190         LD    (KRUG),A
1357 7C       05200 HEX16   LD    A,H         ; ****** WRITE IN HEX FORMAT HL CONDITIONALLY
1358 CD5C13   05210         CALL  HEX8        ; FIRST HIGH BYTE
135B 7D       05220 HEX8L   LD    A,L         ; ****** WRITE IN HEX FORMAT L CONDITIONALLY
135C 4F       05230 HEX8    LD    C,A         ; ****** WRITE IN HEX FORMAT A CONDITIONALLY
135D E6F0     05240         AND   0F0H        ; MASK UPPER 4 BITS
135F CD3714   05250         CALL  RLC4        ; ROTATE AND PUT IN LOWER 4
1362 CD6813   05260         CALL  HCONV       ; CONVERT TO HEX DIGIT (0-9; A-F) AND WRITE
1365 79       05270         LD    A,C
1366 E60F     05280         AND   0FH         ; AND SAME FOR LOWER 4 BITS
;newpage
1368 C630    05290 HCONV  ADD    A,30H      ; CONVERTS TO ASCII CHARACTER
136A FE3A    05300        CP     3AH        ; ABOVE 9?
136C 3802    05310        JR     C,ZAPRIN   ; NO - SKIP
136E C807    05320        ADD    A,7        ; IF YES ADD 7 (TO A-F)
1370 F5      05330 ZAPRIN PUSH   AF
1371 3AAA2A  05340        LD     A,(KRUG)   ; TEST FIRST CONDITION
1374 B7      05350        OR     A          ; WHICH IS ROUND?
1375 2806    05360        JR     Z,RETK1    ; IF FIRST - DON'T CONTINUE
1377 3AB32B  05370        LD     A,(OPTION) ; TEST SECOND CONDITION
137A 1F      05380        RRA              ; WHICH OPTION?
137B 3802    05390        JR     C,NORET1   ; IF PRINTING IS REQUESTED - SKIP
137D F1      05400 RETK1  POP    AF
137E C9      05410        RET
137F F1      05420 NORET1 POP    AF
1380 E7      05430        RST    20H        ; WRITE CHARACTER TO SCREEN AND...
1381 C9      05440        RET               ; ...POTENTIALLY TO PRINTER             
1382         05450
1382 CBFLUS  05460        EQU    $
1382 CD0517  05470        CALL   IXIYHL     ; SAVE IX IY OR HL DEPENDING ON HL
1385 79      05480        LD     A,C
1386 0600    05490        LD     B,0
1388 FE34    05500        CP     34H        ; IS IT GROUP 4 (CB+)
138A D2D613  05510        JP     NC,GRUPA5  ; IF NOT CONTINUE
138D 21351E  05520        LD     HL,TAB4-2AH; ELSE - POINT TO TABLE
1390 09      05530        ADD    HL,BC      ; CALCULATE POSITION
1391 46      05540        LD     B,(HL)     ; GET CODE
1392 DD360ACB 05550        LD     (IX+10),0CBH   ; FIRST BYTE: CB
1396 DD770B  05560        LD     (IX+11),B  ; SECOND BYTE: FROM TABLE
1399 DD36OE02 05570        LD     (IX+14),2 ; NUMBER OF BYTES: 2
139D 21E12B  05580        LD     HL,INS3
13A0 FE31    05590        CP     31H        ; SOME OF CB+ INSTRUCTIONS DON'T HAVE...
13A2 381A    05600        JR     C,NOBIT    ; ...NUMERIC FIELD
13A4 CDD616  05610        CALL   ZAINS2     ; GET NUMERIC FIELD WITH ALL TESTS
13A7 FE08    05620        CP     8          ; FOR BIT/SET/RES; IF BIT>7
13A9 D24F16  05630        JP     NC,HOWHL   ; THEN IT'S AN ERROR
13AC 07      05640        RLCA              ; ROTATE NUMBER OF BITS INTO YOUR FIELD
13AD 07      05650        RLCA
13AE 07      05660        RLCA
13AF DD860B  05670        OR     (IX+11)    ; AND PUT IT IN CODE
13B2 DD770B  05680        LD     (IX+11),A
13B5 1808    05690        JR     RHLIXY     ; CHECK WHICH REGISTER IT IS
             05700
13B7 7E      05710 NOBIT  LD     A,(HL)     ; WE SAID THERE'S NO NUMERIC FIELD
13B8 B7      05720        OR     A          ; ...AND HERE IT IS; SO ERROR
13B9 C22D19  05730 WHATNZ JP     NZ,WHATHL  ; WHICH REGISTER (BCDEHL)A
13BC 21DE2B  05740        LD     HL,INS2
13BF CDE616  05750 RHLIXY CALL   KOJR2
13C2 DD860B  05760 SKRLD  OR     (IX+11)    ; PUT IT IN CODE
13C5 DD770B  05770        LD     (IX+11),A
13C8 23      05780        INC    HL
13C9 6E      05790        LD     L,(HL)
13CA 3AE42B  05800        LD     A,(IXIY)   ; IS THIS THE SAVED IX/IY CASE?
13CD B7      05810        OR     A
13CE C8      05820        RET    Z          ; NO - RETURN
13CF DD660B  05830        LD     H,(IX+11)  ; YES - THEN 2-BYTE CODE
13D2 22E62B  05840 ZAGOHL LD     (CODE+1),HL
13D5 C9      05850        RET
             05860
13D6 FE3C    05870 GRUPA5 CP     3CH        ; IS IT GROUP 5 (ARITHMETIC GROUP)
13D8 DD360E01 05880        LD     (IX+14),1
13DC D26314  05890        JP     NC,GRUPA6  ; NO - CONTINUE
13DF 21361E  05900        LD     HL,TAB5-34H; TABLE OF GROUP 5
13E2 09      05910        ADD    HL,BC      ; CALCULATE POSITION IN TABLE
13E3 5E      05920        LD     E,(HL)     ; GET CODE INTO E REGISTER
13E4 21DE2B  05930        LD     HL,INS2
13E7 7E      05940        LD     A,(HL)
; new page
13E8 FE06    05950        CP     6          ; IS HL IN PARENTHESES?
13EA 2850    05960        JR     Z,HL16     ; YES - THEN SPECIAL PROCESSING
13EC 3AE12B  05970        LD     A,(INS3)
13EF B7      05980        OR     A          ; IS THERE A SECOND OPERAND?
13F0 2808    05990        JR     Z,PRESK3   ; NO - SKIP ITS PROCESSING
13F2 7E      06000        LD     A,(HL)     ; IS THIS THE FIRST OPERAND?
13F3 FE0E    06010        CP     0EH        ; IS IT 'A'?
13F5 28C2    06020        JR     NZ,WHATNZ  ; IF NOT - ERROR
13F7 21E12B  06030        LD     HL,INS3    ; POINT TO OPER 3
13FA 7E      06040 PRESK3 LD     A,(HL)
13FB FE40    06050        CP     40H        ; NUMBER WITHOUT PARENTHESES?
13FD 281F    06060        JR     Z,NUMLOG   ; YES - SPECIAL PROCESSING
13FF CDE616  06070        CALL   KOJR2      ; WHICH REGISTER
1402 B3      06080        OR     E          ; PUT IN CODE
1403 23      06090 ADJUST INC    HL
1404 DD770A  06100 ADJ1   LD     (IX+10),A  ; FIRST BYTE OF CODE
1407 7E      06110        LD     A,(HL)
1408 DD770B  06120        LD     (IX+11),A  ; SECOND BYTE OF CODE
140B C9      06130        RET
             06140
140C DD340E  06150 SUB    INC    (IX+14)    ; INCREMENT NUMBER OF BYTES
140F 23      06160        INC    HL
1410 23      06170        INC    HL         ; HL POINTS TO HIGH BYTE OF NUMBER
1411 3AAA2A  06180        LD     A,(KRUG)
1414 B7      06190        OR     A          ; WHICH ROUND?
1415 2805    06200        JR     Z,NEU1     ; FIRST - THEN DON'T CHECK FOR ERROR
1417 7E      06210        LD     A,(HL)
1418 B7      06220        OR     A
1419 C24F16  06230        JP     NZ,HOWHL   ; GREATER THAN 255; THUS OVERFLOW
141C 2B      06240 NEU1   DEC    HL         ; POINT TO LOW BYTE
141D C9      06250        RET
             06260
141E CD0C14  06270 NUMLOG CALL   SUB        ; OVERFLOW TEST
1421 7B      06280        LD     A,E
1422 F646    06290        OR     46H        ; REWORK CODE
1424 18DE    06300        JR     ADJ1       ; PUT IT IN PLACE FOR CODES
             06310
1426 1E01    06320 PARREG LD     E,1        ; *** TESTS WHICH REGISTER OR...
1428 CDED16  06330        CALL   RTEST      ; ...PAIR OF REGISTERS AND FORMS MICROCODE
142B 3008    06340        JR     NC,RLC3    ; NC MEANS IT'S 8-BIT REGISTER
142D 1C      06350        INC    E          ; HERE IT'S 16-BIT PAIR
142E 7E      06360 KOJPAR LD     A,(HL)
142F FE08    06370 KOP1   CP     8          ; MORE THAN 8 ARE 8-BIT REGISTERS
1431 3008    06380        JR     NC,WHATNC  ; SO THIS IS AN ERROR
1433 D604    06390        SUB    4          ; SUBTRACT 4 FOR IX/IY/AF
1435 3861    06400        JR     C,SKWHAT   ; AND WITH THEM NO ARITHMETIC...
1437 07      06410 RLC4   RLCA              ; ...OPERATIONS
1438 07      06420 RLC3   RLCA
1439 07      06430        RLCA
143A 07      06440        RLCA
143B C9      06450        RET
             06460
143C 79      06470 HL16   LD     A,C        ; 16-BIT OPERATIONS WITH HL REGISTER
143D FE37    06480        CP     37H        ; IS IT 'SUB' INSTRUCTION?
143F 3057    06490 WHATNC JR     NC,SKWHAT  ; YES - BUT THIS CAN'T BE FOR 16-BIT REG
1441 21E52B  06500        LD     HL,CODE
1444 FE34    06510        CP     34H        ; IS IT 'ADD' INSTRUCTION?
1446 280C    06520        JR     Z,ADDINS   ; YES - SKIP ADDING ONE BYTE
1448 3AE42B  06530        LD     A,(IXIY)   ; IS IX/IY INVOLVED?
144B B7      06540        OR     A
144C 204A    06550        JR     NZ,SKWHAT  ; YES - NOT ALLOWED
144E 36ED    06560        LD     (HL),0EDH  ; ADD ED+
1450 23      06570        INC    HL
1451 DD340E  06580        INC    (IX+14)    ; INCREMENT NUMBER OF BYTES
1454 E5      06590 ADDINS PUSH   HL
1455 21E12B  06600        LD     HL,INS3    ; IN SECOND OPERAND...
;new page
1458 CD2E14  06610        CALL   KOJPAR     ; ...WHICH IS REGISTER PAIR
145B 213F1E  06620        LD     HL,TAB6-34H
145E 09      06630        ADD    HL,BC      ; CALCULATE MICROCODE
145F B6      06640        OR     (HL)       ; AND PUT IT IN CODE
1460 E1      06650        POP    HL
1461 77      06660        LD     (HL),A     ; PUT IN PLACE FOR CODES
1462 C9      06670        RET
             06680
1463 FE3E    06690 GRUPA6 CP     3EH        ; IS IT GROUP 6 (INC - DEC)
1465 3034    06700        JR     NC,GRUPA7  ; NO - GO FURTHER
1467 CD9014  06710        CALL   IF3SN      ; IF IT HAS OPER 2 THEN WHAT
146A CD2614  06720        CALL   PARREG     ; WHICH REGISTER OR REGISTER PAIR?
146D 57      06730        LD     D,A
146E 79      06740        LD     A,C
146F 1D      06750        DEC    E          ; E = NUMBER OF BIT/8; E=2 FOR 16-BIT
1470 280E    06760        JR     Z,BYTE1    ; IF E=1; THEN 8-BIT
1472 FE3C    06770        CP     3CH        ; 3CH = 'INC'
1474 2803    06780        JR     Z,INCJE1   ; SKIP 'DEC' PROCESSING
1476 3E0B    06790        LD     A,0BH      ; 'DEC' MICROCODE
1478 21      06800        DEFB   21H        ; 21H='LD HL,NN'; JUST SKIPS 2 BYTES
1479 3E03    06810 INCJE1 LD     A,3        ; 3 = 'DEC'
147B B2      06820        OR     D          ; INCLUDE IN MICROCODE
147C 32E52B  06830 CODRET LD     (CODE),A
147F C9      06840        RET
             06850
1480 FE3C    06860 BYTE1  CP     3CH        ; 3CH = 'INC' TOKEN
1482 2803    06870        JR     Z,INCJE    ; SKIP 'DEC' PROCESSING
1484 3E05    06880        LD     A,5        ; 5 = 'DEC' MICROCODE
1486 21      06890        DEFB   21H        ; 21H='LD HL,NN'; JUST SKIPS 2 BYTES
1487 3E04    06900 INCJE  LD     A,4        ; 4 = 'INC' MICROCODE
1489 B2      06910        OR     D
148A 21DE2B  06920        LD     HL,INS2
148D C30314  06930        JP     ADJUST     ; PUT IN PLACE FOR CODES
             06940
1490 21DE2B  06950 IF3SN  LD     HL,INS2
1493 3AE12B  06960 TEST3  LD     A,(INS3)   ; IF THERE EXISTS SECOND OPERAND
1496 B7      06970        OR     A
1497 C8      06980        RET    Z
1498 C32D19  06990 SKWHAT JP     WHATHL     ; ... THEN GO TO WHAT
             07000
149B FE3F    07010 GRUPA7 CP     3FH        ; 7. GROUP (LD/EX)
149D CA6115  07020        JP     Z,EXJE     ; IF IT'S JFN (EX) SKIP
14A0 D2B815  07030        JP     NC,GRUPA8  ; IF IT'S >3FH GO FURTHER
14A3 060B    07040        LD     B,11       ; 11 CASES FOR TESTING
14A5 21A11E  07050        LD     HL,TESTAR  ; 'LD' TABLE
14A8 CD7515  07060        CALL   TEST       ; FIND COINCIDENT CASE
14AB 202D    07070        JR     NZ,NFOU1   ; NOT SPECIAL CASE - SKIP
14AD FE03    07080        CP     3          ; IS IT LD A,(NN) OR (NN),A?
14AF 301A    07090        JR     NC,NOTNN   ; NEITHER ONE NOR OTHER - SKIP
14B1 21DF2B  07100        LD     HL,INS2+1  ; GET OPER1
14B4 3D      07110        DEC    A
14B5 2803    07120        JR     Z,NNA      ; REMAINING OPER BECAUSE IT'S LD (NN)
14B7 21E22B  07130        LD     HL,INS3+1  ; OPER2
14BA DD360E03 07140 NNA   LD     (IX+14),3  ; 3 BYTES INSTRUCTION LENGTH
14BE 7E      07150        LD     A,(HL)
14BF 32E62B  07160        LD     (CODE+1),A ; LOW BYTE OF NUMERIC FIELD NN
14C2 23      07170        INC    HL
14C3 7E      07180        LD     A,(HL)
14C4 32E72B  07190        LD     (CODE+2),A ; HIGH BYTE
14C7 DD700A  07200 CODE6  LD     (IX+10),B  ; 32H OR 3AH (LD (NN),A OR LD A,(NN))
14CA C9      07210        RET
             07220
14CB FE08    07230 NOTNN  CP     8          ; IS IT LD A,I/I,A/A,R/R,A
14CD 21E52B  07240        LD     HL,CODE
14D0 3806    07250        JR     C,SIMPLE   ; NONE OF THESE
14D2 36ED    07260        LD     (HL),0EDH  ; FIRST BYTE OF CODE IS 0EDH
;new page
14D4 23     07270      INC     HL
14D5 DD340E 07280      INC     (IX+14)        ; COUNTER BYTE = 1
14D8 70     07290 SIMPLE LD    (HL),B         ; CODE
14D9 C9     07300      RET
            07310
14DA 21DE2B 07320 NFDU1 LD     HL,INS2       ; LOAD R,R / R,N / RR,NN
14DD CDE616 07330      CALL    RTEST         ; FIRST REGISTER
14E0 3833   07340      JR      C,BYTE2       ; 16 - BIT
14E2 07     07350      RLCA                  ; 8 - BIT
14E3 07     07360      RLCA
14E4 07     07370      RLCA
14E5 5F     07380      LD      E,A          ; MICROCODE IN E REG
14E6 21E12B 07390      LD      HL,INS3
14E9 7E     07400      LD      A,(HL)
14EA FE40   07410      CP      40H
14EC 2817   07420      JR      Z,NUMLD      ; NUMERIC 8-BIT LOAD
14EE CDE616 07430      CALL    KOJR2        ; SECOND REGISTER
14F1 B3     07440      OR      E
14F2 FE36   07450      CP      36H          ; IF LD (HL),(HL) IT'S AN ERROR
14F4 28A2   07460      JR      Z,SKWHAT
14F6 F640   07470      OR      40H          ; SET BIT 6
14F8 32E52B 07480      LD      (CODE),A
14FB 3AE22B 07490      LD      A,(INS3+1)
14FE DD8604 07500      OR      (IX+4)
1501 32E42B 07510      LD      (CODE+1),A
1504 C9     07520      RET
            07530
1505 7B     07540 NUMLD LD     A,E
1506 F606   07550      OR      6            ; SET BIT 5 AND BIT 6 MICROCODE
1508 32E52B 07560      LD      (CODE),A
150B CDDC14 07570      CALL    SUB          ; INSERT BYTE COUNT AND WHAT TEST
150E 7E     07580      LD      A,(HL)
150F 21DE2B 07590      LD      HL,INS2
1512 C3C213 07600      JP      SKRLD        ; DO CODE
            07610
1515 DD360E03 07620 BYTE2 LD   (IX+14),3    ; 16-BIT LOAD; THERE ARE 3 BYTES
1519 11E12B 07630      LD      DE,INS3
151C 1A     07640      LD      A,(DE)
151D FE40   07650      CP      40H          ; NUMERIC LOAD WITHOUT BRACKETS?
151F 283A   07660      JR      Z,DDNN       ; YES - JUMP
1521 0608   07670      LD      B,8          ; MICROCODE
1523 FEC0   07680      CP      0C0H         ; DOES IT REFER TO HL?
1525 2811   07690      JR      Z,OSTAJE     ; YES - KEEP 3 BYTES
1527 7E     07700      LD      A,(HL)       ; IS IT ANOTHER OPERAND HL?
1528 FEC0   07710      CP      0C0H
152A 2809   07720      JR      Z,OSTAJ2     ; YES - KEEP 3 BYTES
152C FE07   07730      CP      7            ; DOES IT REFER TO SP?
152E 2003   07740      JR      NZ,WHL2      ; NO - THEN IT'S AN ERROR
1530 1A     07750      LD      A,(DE)       ; IS IT LD SP
1531 FE06   07760      CP      6
1533 203A   07770 WHL2  JR     NZ,NZWHAT    ; WHAT
1535 EB     07780 OSTAJ2 EX    DE,HL
1536 0600   07790      LD      B,0          ; MICROCODE = 0
1538 CD2E14 07800 OSTAJE CALL  KOJPAR       ; CHECK PAR REGISTER
153B F602   07810      OR      2            ; FORM CODE
153D B0     07820      OR      B
153E 47     07830      LD      B,A
153F E630   07840      AND     30H
1541 FE20   07850      CP      20H
1543 78     07860      LD      A,B
1544 2809   07870      JR      Z,IPAKHL     ; TAKE 3-BYTE CASE
1546 DD360E0D 07880     LD     (IX+9),0EDH  ; FIRST BYTE IS 0EDH
154A DD340E 07890      INC     (IX+14)      ; 4 - BYTE INSTRUCTION
154D F641   07900      OR      41H          ; CHANGE CODE
154F 32E52B 07910 IPAKHL LD    (CODE),A
1552 EB     07920      EX      DE,HL
;new page
1553 23     07930      INC     HL
1554 5E     07940      LD      E,(HL)        ; LOW BYTE OF CODE
1555 23     07950      INC     HL
1556 56     07960      LD      D,(HL)        ; HIGH BYTE OF CODE
1557 EB     07970      EX      DE,HL
1558 C3D213 07980      JP      ZAGOHL        ; PUT 2 BYTES OF CODE IN PLACE
            07990
155B CD2E14 08000 DDNN  CALL    KOJPAR        ; LD DD CASE
155E 3C     08010      INC     A             ; NUMERIC 16-BIT LOAD
155F 18EE   08020      JR      IPAKHL
            08030
1561 3ADE2B 08040 EX3E  LD      A,(INS2)      ; 'EX' GROUP
1564 CDD815 08050      CALL    IFIXIY
1567 21C21E 08060      LD      HL,TEST2      ; NO EXCHANGE CODE IX I IY
156A 0603   08070      LD      B,3           ; 'EX' TABLE...
156C CD7515 08080      CALL    TEST          ; ...OF 3 MEMBERS
156F C22D19 08090 NZWHAT JP     NZ,WHATHL    
1572 C3C714 08100      JP      CODE8         ; NOT FOUND - ERROR
            08110
            08120
1575 3ADE2B 08130 TEST  LD      A,(INS2)      ; GET OPERAND 1
1578 BE     08140      CP      (HL)          ; COMPARE WITH TABLE
1579 23     08150      INC     HL
157A 2006   08160      JR      NZ,FAIL1      ; NO MATCH FOUND
157C 3AE12B 08170      LD      A,(INS3)      ; MAYBE OPER 2?
157F BE     08180      CP      (HL)
1580 2805   08190      JR      Z,MATCH       ; MATCH FOUND
1582 23     08200 FAIL1 INC     HL
1583 23     08210      INC     HL
1584 10EF   08220      DJNZ    TEST          ; TRY 8 TIMES
1586 C9     08230      RET
1587 23     08240 MATCH INC     HL
1588 78     08250      LD      A,B           ; GET COUNT (N-NUMBER OF TRIES)
1589 46     08260      LD      B,(HL)        ; GET MICROCODE
158A C9     08270      RET
            08280
158B 21DE2B 08290 GRUPA8 LD     HL,INS2
158E 11E12B 08300      LD      DE,INS3
1591 012D19 08310      LD      BC,WHATHL
1594 C5     08320      PUSH    BC            ; FUTURE 'RET' MEANS 'JDI NA WHAT'
1595 010100 08330      LD      BC,1          ; IS IT 'OUT' TOKEN?
1598 FE41   08340      CP      41H
159A 2806   08350      JR      Z,OUTJE       ; YES - JUMP
159C 3043   08360      JR      NC,GRUPA9     ; IF IT'S >41H, CONTINUE
159E EB     08370      EX      DE,HL
159F 010008 08380      LD      BC,800H
15A2 CB7E   08390 OUTJE BIT     7,(HL)        ; IF NOT IN BRACKETS
15A4 C8     08400      RET     Z
15A5 CB76   08410      BIT     6,(HL)
15A7 2813   08420      JR      Z,NIJENN      ; NOT NUMERIC 'IN'
15A9 23     08430      INC     HL
15AA 23     08440      INC     HL
15AB 7E     08450      LD      A,(HL)
15AC B7     08460      OR      A
15AD C0     08470      RET     NZ            ; IF NUMERIC EXISTS AT OPER2 PLACE
15AE 2B     08480      DEC     HL
15AF 7E     08490      LD      A,(HL)
15B0 32E62B 08500      LD      (CODE+1),A    ; NUMERIC VALUE AT PLACE OF 2ND BYTE
15B3 1A     08510      LD      A,(DE)
15B4 FE0E   08520      CP      0EH           ; IS IT A REGISTER?
15B6 C0     08530      RET     NZ            ; NO-ERROR
15B7 3ED3   08540      LD      A,0D3H        ; MICROCODE FOR A REGISTER
15B9 B0     08550      OR      B
15BA 1815   08560      JR      CONTNN
15BC 7E     08570 NIJENN LD     A,(HL)        ; IS REGISTER IN BRACKETS C?
15BD FEB9   08580      CP      0B9H
; new page
15BF C0     08590      RET     NZ            ; NO-ERROR
15C0 DD3609ED 08600    LD      (IX+9),0EDH   ; FIRST BYTE OF CODE
15C4 EB     08610      EX      DE,HL
15C5 CDE616 08620      CALL    KOJR2         ; WHICH REGISTER IS IN/OUT (C)?
15C8 FE06   08630      CP      6             ; IS IT (HL)?
15CA C8     08640      RET     Z             ; IT'S NOT IN ORDER
15CB 07     08650      RLCA
15CC 07     08660      RLCA
15CD 07     08670      RLCA
15CE F640   08680      OR      40H           ; ADD BIT 5 TO MICROCODE
15D0 B1     08690      OR      C             ; FORM CODE
15D1        08700 CONTNN EQU    $
15D1 32E52B 08710      LD      (CODE),A
15D4 F1     08720      POP     AF
15D5 C34813 08730      JP      IXGDON

                08740
15D8 FE05   08750 IFIXIY CP     5
15DA C0     08760      RET     NZ
15DB 3AE42B 08770      LD      A,(IXIY)      ; IS IT THE SAME IN (IXIY)?
15DE B7     08780      OR      A
15DF 1867   08790      JR      RETIFZ        ; RETURN IF NOT, OTHERWISE ERROR

                08800
                08810
15E1 4F     08820 GRUPA9 LD     C,A           ; 'JUMP'/'CALL'/'RET'
15E2 FE44   08830      CP      44H
15E4 200B   08840      JR      NZ,NOJPHL     ; IF NOT JP (HL)/(IX)/(IY) JUMP
15E6 7E     08850      LD      A,(HL)
15E7 FE86   08860      CP      86H
15E9 79     08870      LD      A,C
15EA 2005   08880      JR      NZ,NOJPHL     ; IF NOT HL IN BRACKETS JUMP
15EC 3EE9   08890      LD      A,0E9H        ; CODE FOR JP (HL)
15EE D1     08900 SVEOK  POP    DE
15EF 1875   08910      JR      ZAGOV7        ; PUT CODE IN PLACE
15F1 FE46   08920 NOJPHL CP     46H
15F3 2863   08930      JR      Z,RETJE       ; JUMP IF 'RET' TOKEN
15F5 3072   08940      JR      NC,GRUPA10    ; IF TOKEN IS GREATER
15F7 D642   08950      SUB     42H
15F9 07     08960      RLCA
15FA 5F     08970      LD      E,A
15FB CDBC16 08980      CALL    CC            ; CHECK IF CONDITIONAL JP/RET EXISTS
15FE 7B     08990      LD      A,E
15FF 300A   09000      JR      NC,NOTCC      ; JUMP IF NOT CONDITIONAL
1601 3C     09010      INC     A
1602 3D     09020      DEC     A
1603 C8     09030      RET     Z             ; IF IT IS CONDITIONAL - WHAT
1604 3D     09040      DEC     A
1605 3D     09050      DEC     A
1606 2003   09060      JR      NZ,NOTCC      ; IF NOT JR
1608 CB68   09070      BIT     5,B           ; IF JR PO/PE/P/M
160A C0     09080      RET     NZ            ; ...THEN IT'S AN ERROR
            09090
160B E5     09100 NOTCC  PUSH   HL
160C 1600   09110      LD      D,0
160E 21761E 09120      LD      HL,TABJP
1611 ED5A   09130      ADC     HL,DE         ; CALCULATE POSITION IN TABLE
1613 7E     09140      LD      A,(HL)        ; FIRST ELEMENT MICROCODE
1614 B0     09150      OR      B             ; SECOND ELEMENT MICROCODE
1615 32E52B 09160      LD      (CODE),A
1618 E1     09170      POP     HL
1619 3E03   09180      LD      A,3           ; 3-BYTE JP/CALL
161B DD770E 09190      LD      (IX+14),A
161E 7E     09200      LD      A,(HL)
161F FE40   09210      CP      40H
1621 C0     09220      RET     NZ            ; IF NOT NUMERIC - ERROR
1622 F1     09230      POP     AF
1623 23     09240      INC     HL
; new page
1624 5E     09250      LD      E,(HL)        ; LOW BYTE OF NUMERIC
1625 23     09260      INC     HL
1626 56     09270      LD      D,(HL)        ; HIGH BYTE OF NUMERIC
1627 ED53E62B 09280    LD      (CODE+1),DE   ; ...GO INTO 2 AND 3 BYTE OF INSTRUCTION
162B 79     09290      LD      A,C
162C FE44   09300      CP      44H
162E D0     09310      RET     NC            ; RETURN IF IT'S JP/CALL/RET
162F DD350E 09320      DEC     (IX+14)       ; ONLY 2 BYTES AND NOT 3
1632 2AEA2B 09330      LD      HL,(ADDR)
1635 23     09340      INC     HL
1636 23     09350      INC     HL            ; RAISE 2 BYTES JR/DJNZ FIELD
1637 EB     09360      EX      DE,HL
1638 B7     09370      OR      A
1639 ED52   09380      SBC     HL,DE         ; CALCULATE RELATIVE JUMP
163B DD750B 09390      LD      (IX+11),L     ; RELATIVE JUMP
163E DD360C00 09400    LD      (IX+12),0     ; HIGH BYTE = 0
1642 CB7D   09410 ADJOV  BIT    7,L
1644 2001   09420      JR      NZ,NEGATL     ; JUMP BACKWARD (NEGATIVE)
1646 25     09430      DEC     H
1647 24     09440 NEGATL INC    H
1648 C8     09450 RETIFZ RET    Z            ; RETURN IF JUMP IS POSITIVE AND H=0
1649 ED5BAA2A 09460 IFOV   LD   DE,(KRUG)
164D 1D     09470      DEC     E
164E C0     09480      RET     NZ            ; RETURN IF IT'S FIRST CIRCLE
164F ED5B9F2A 09490 HDWHL  LD   DE,(2A9FH)   ; GO TO "HOW" AFTER SETTING SIGN...
1653 13     09500      INC     DE            ; ...QUESTIONS AT START OF LINE
1654 13     09510      INC     DE
1655 C35A06 09520      JP      65AH

                09530
1658 CDBC16 09540 RETJE  CALL    CC           ; CONDITIONAL RETURN
165B 34     09550      INC     (HL)
165C 35     09560      DEC     (HL)
165D C8     09570      RET     NZ            ; ERROR IF OPER2 EXISTS
165E 3EC9   09580      LD      A,0C9H        ; RET CODE = 0C9H
1660 D1     09590      POP     DE            ; REMOVE 'WHAT' ENTRY POINT FROM STACK
1661 3003   09600      JR      NC,ZAGOV7     ; UNCONDITIONAL RET
1663 3EC0   09610      LD      A,0C0H        ; CONDITIONAL RET: MICROCODE...
1665 B0     09620      OR      B             ; ...AND READY CODE
1666 C37C14 09630 ZAGOV7 JP     CODRET

                09650
1669 D649   09660 GRUP10 SUB     49H          ; GROUP 10: RST I IM
166B 3037   09670      JR      NC,PSHPOP     ; IF IT'S >49H
166D 4F     09680      LD      C,A
166E CD1813 09690      CALL    IFNUM1        ; IF NOT OPERAND NUMERIC OR IF...
1671 23     09700      INC     HL            ; OPERAND2 EXISTS
1672 23     09710      INC     HL
1673 7E     09720      LD      A,(HL)        ; ...THEN WHAT
1674 B7     09730      OR      A
1675 C44916 09740      CALL    NZ,IFOV       ; IF IT'S >255 AND IF 2ND CIRCLE-ERROR
1678 2B     09750      DEC     HL
1679 0C     09760      INC     C
167A 201D   09770      JR      NZ,RSTP       ; GO TO 'RESTART' PROCESSING
167C DD340E 09780      INC     (IX+14)       ; HERE IT'S 'IM'; 2 BYTES
167F DD3609ED 09790    LD      (IX+9),0EDH   ; FIRST BYTE
1683 7E     09800      LD      A,(HL)
1684 47     09810      LD      B,A
1685 FE03   09820      CP      3
1687 D44916 09830      CALL    NC,IFOV       ; LARGEST IM IS 2; ABOVE THAT IS ERROR
168A 3E56   09840      LD      A,56H         ; CODE FOR IM 1
168C 05     09850      DEC     B
168D 2807   09860      JR      Z,SVEOK1
168F 3E5E   09870      LD      A,5EH         ; CODE FOR IM 2
1691 05     09880      DEC     B
1692 2802   09890      JR      Z,SVEOK1
1694 3E46   09900      LD      A,46H         ; CODE FOR IM 3
1696 C3EE15 09910 SVEOK1 JP     SVEOK
; new page
1699 7E       09920             LD      A,(HL)
169A E6C7     09930 RSTP       AND     0C7H          ; RESTART PROCESSING
169C C44916   09940             CALL    NZ,IFDV      ; IMAGE IS ERROR
169F 7E       09960             LD      A,(HL)
16A0 F6C7     09970             OR      0C7H         ; MICROCODE
16A2 18F2     09980             JR      SVEOK1

16A4 07       10000 PSHPOP     RLCA                  ; PUSH/POP PROCESSING
16A5 07       10010             RLCA
16A6 4F       10020             LD      C,A
16A7 1A       10030             LD      A,(DE)
16A8 B7       10040             OR      A
16A9 C8       10050             RET     NZ           ; IF OPERATOR 2 EXISTS - ERROR
16AA 7E       10060             LD      A,(HL)
16AB FE07     10070             CP      7
16AD C8       10080             RET     Z            ; IF IT'S PUSH/POP SP
16AE FE03     10090             CP      3
16B0 2002     10100             JR      NZ,NOTAF
16B2 3E07     10110             LD      A,7          ; FOR AF A SPECIAL CODE
16B4 CD2F14   10120 NOTAF      CALL    KOP1         ; FORMING MICROCODE
16B7 F6C1     10130             OR      0C1H
16B9 B1       10140             OR      C            ; THIS IS READY CODE
16BA 18DA     10150             JR      SVEOK1

16BC 0600     10170 CC         LD      B,0          ; MICROCODE CONDITIONAL OPERATION
16BE 7E       10180             LD      A,(HL)
16BF FE09     10190             CP      9
16C1 2003     10200             JR      NZ,NREGC
16C3 3E14     10210             LD      A,14H        ; SPECIAL CASE; C FLAG IS NOT
16C5 77       10220             LD      (HL),A       ; NEEDED BUT REGISTER C IS!
16C6 D611     10230 NREGC      SUB     11H
16C8 3F       10240             CCF
16C9 D0       10250             RET     NC           ; NC IF TOKEN=11H (REGISTER!)
16CA FE08     10260             CP      8
16CC D0       10270             RET     NC
16CD 07       10280             RLCA
16CE 07       10290             RLCA
16CF 07       10300             RLCA
16D0 23       10310             INC     HL
16D1 23       10320             INC     HL
16D2 23       10330             INC     HL
16D3 47       10340             LD      B,A          ; B IS MICROCODE
16D4 37       10350             SCF                  ; C SET = CONDITION OK
16D5 C9       10360             RET

16D6 DD7E03   10380 ZAINS2     LD      A,(IX+3)     ; ** IF NUMERIC LESS THAN 256...
16D9 D640     10390             SUB     40H          ; ...RETURN
16DB DDB605   10400             OR      (IX+5)
16DE 200A     10410             JR      NZ,ZAWH1     ; OTHERWISE WHAT
16E0 DD7E04   10420             LD      A,(IX+4)
16E3 C9       10430             RET

16E4 1E01     10460 KOJREG     LD      E,1          ; E=1 THIS IS SIGN THAT IT'S 8-BIT REG
16E6 CDED16   10470 KOJR2      CALL    RTEST        ; TAKE TOKEN REGISTER
16E9 D0       10480             RET     NC
16EA C32D19   10490 ZAWH1      JP      WHATHL       ; IF DELETED IS NOT REGISTER
16ED 7E       10500 RTEST      LD      A,(HL)
16EE B7       10510             OR      A
16EF 28F9     10520             JR      Z,ZAWH1      ; IF WITH IT STILL HAS NUMERIC VALUE
16F1 FE86     10530             CP      86H          ; IF (HL) INDIRECTLY
16F3 3E06     10540             LD      A,6
16F5 C8       10550             RET     Z            ; THEN MICROCODE=6
16F6 7E       10560             LD      A,(HL)       ; READY CASE (HL)INDIRECTLY
16F7 FE0F     10570             CP      0FH
; new page
16F9 3F       10580             CCF
16FA D8       10590             RET     C
16FB D608     10600             SUB     8
16FD D8       10610             RET     C
16FE FE06     10620             CP      6
1700 2001     10630             JR      NZ,ZARET1    ; RETURN WITH MICROCODE IF IT'S <6
1702 3C       10640             INC     A            ; INCREMENT TO 7 IF IT'S A REG.
1703 B7       10650 ZARET1      OR      A            ; SET FLAGS
1704 C9       10660             RET

1705          10680 IXIYHL      EQU     $            ; *** REDUCTION IX/IY TO HL CASE
1705 CD1717   10690             CALL    ZAM          ; REDUCE CASE FOR OPER 1
1708 21E12B   10700             LD      HL,INS3
170B 200A     10710             JR      NZ,ZAM       ; REDUCE CASE FOR OPER 2
170D 50       10720             LD      D,B
170E CD1717   10730             CALL    ZAM
1711 C0       10740             RET     NZ
1712 78       10750             LD      A,B
1713 BA       10760             CP      D
1714 C8       10770             RET     Z
1715 18D3     10780             JR      ZAWH1        ; 'IY' FIRST BYTE (REST IS AS HL)

1717 06FE     10800 ZAM        LD      B,0FEH
1719 7E       10810             LD      A,(HL)
171A E63F     10820             AND     3FH
171C FE06     10830             CP      6
171E C8       10840             RET     Z
171F 05       10850             DEC     B
1720 3D       10860             DEC     A
1721 2003     10870             JR      NZ,NOIX
1723 06DD     10880             LD      B,0DDH       ; 'IX' FIRST BYTE (REST IS AS HL)
1725 3E       10890             DEFB    3EH
1726 3D       10900 NOIX       DEC     A
1727 C0       10910             RET     NZ
1728 DD7009   10920             LD      (IX+9),B     ; STORE FIRST BYTE AT SPEC. IXIY POSITION
172B 7E       10930             LD      A,(HL)
172C E6C0     10940             AND     0C0H
172E F606     10950             OR      6
1730 77       10960             LD      (HL),A
1731 AF       10970             XOR     A
1732 C9       10980             RET

1733          11020 PROG1      EQU     $            ; ***** TOKEN FORMATION 1...
1733 11EA2B   11030             LD      DE,FIELD+18  ; ...PUTTING IN TABLE *******
1736 0612     11040             LD      B,18
1738 AF       11050             XOR     A
1739 1B       11060 CLFLD      DEC     DE
173A 12       11070             LD      (DE),A       ; CLEARING ENTIRE TABLE
173B 10FC     11080             DJNZ    CLFLD
173D D5       11090             PUSH    DE
173E DDE1     11100             POP     IX           ; IX TAKES FIRST POSITION (FOR OPER 1)
1740 23       11110             INC     HL
1741 23       11120             INC     HL
1742 E5       11130             PUSH    HL
1743 2AEA2B   11140             LD      HL,(ADDR)
1746 22ED2B   11150             LD      (TEMP1),HL
1749 E1       11160             POP     HL
174A E5       11170             PUSH    HL
174B 7E       11180             LD      A,(HL)
174C FE21     11190             CP      '!'          ; '!' IS PRIMARY
174E C45917   11200             CALL    NZ,RELOAD    ; CALL TOKENIZATION IF NOT PRIMARY
1751 E1       11210             POP     HL
1752 3E0D     11220 FINDCR     LD      A,0DH        ; FIND END OF LINE
1754 BE       11230 SRCHCR     CP      (HL)
; new page
1755 23    11240      INC    HL         ; IT'S NOT $0D - GO FURTHER
1756 C8    11250      RET    Z
1757 18FB  11260      JR     SRCHCR

1759 E5    11280 RELOAD PUSH   HL         ; **** TOKEN GENERATION ****
175A CD051B 11290      CALL   SUB1A      ; RECOGNIZE OPCODE OR OPERAND
175D 2019  11300      JR     NZ,NOLAB   ; IF RECOGNIZED WORD - JUMP
                                        ; IF NOT RECOGNIZED - FIND LABEL
175F E1    11320      POP    HL
1760 22DA2B 11330      LD     (FIELD+2),HL ; STORE LABEL ADDRESS IN PROGRAM
1763 23    11340 SRCH20 INC    HL         ; SEARCH FOR END OF LABEL (BLANK OR CR)
1764 7E    11350      LD     A,(HL)
1765 FE0D  11360      CP     0DH
1767 2806  11370      JR     Z,BLANK    ; IF CR - EXIT
1769 FE20  11380      CP     ' '
176B C26317 11390      JP     NZ,SRCH20  ; IF NOT BLANK - SEARCH FURTHER
176E 23    11400      INC    HL         ; FIRST POSITION AFTER BLANK
176F CD3C1B 11410 BLANK CALL   IF0       ; CHECK IF IT'S END OR REM
1772 CD0F1B 11420      CALL   SUB1      ; RECOGNIZE OPCODE
1775 2822  11430      JR     Z,NEAR     ; IF NOT RECOGNIZED - WHAT

1777 F5    11440      PUSH   AF
1778 F1    11450 NOLAB POP    AF
1779 79    11460      LD     A,C
177A E67F  11470      AND    7FH        ; MASK ALL EXCEPT BIT 7
177C DD7705 11480      LD     (IX+5),A  ; STORE OPCODE
177F CD161B 11490      CALL   IFTXT0    ; CHECK IF IT'S 'TEXT' TOKEN
1782 CD9C17 11500      CALL   TRANS1    ; PROCESS CASE FOR OPER1
1785 DD21DB2B 11510      LD     IX,FIELD+3 ; SET IX FOR OPER2
1789 CD3C1B 11520      CALL   IF0       ; CHECK IF IT'S END OR REM
178C CD6919 11530      CALL   SKIP2     ; SKIP POTENTIAL BLANKS
178F FE2C  11540      CP     ','
1791 2806  11550      JR     NZ,NEAR    ; IF NOT COMMA
1793 CD9D17 11560      CALL   TRANS2    ; PROCESS CASE FOR OPER2
1796 CD3C1B 11570      CALL   IF0       ; CHECK IF IT'S END OR REM
1799 C3EF17 11580 NEAR JP     WHSK      ; IF NOT - ERROR

179C 2B    11600 TRANS1 DEC    HL
179D CD6819 11610 TRANS2 CALL   SKIPBL    ; SKIP POTENTIAL BLANKS
17A0 FE2B  11620      CP     '('
17A2 2005  11630      JR     NZ,NEZAG   ; NOT '(' - JUMP
17A4 23    11640      INC    HL         ; SKIP '(' IF EXISTS
17A5 DDCB06FE 11650      SET    7,(IX+6)   ; SET BIT TO INDICATE BRACKETS
17A9 11B31F 11660 NEZAG LD     DE,TABEL2-1 ; TABLE 2; OPERAND
17AC E5    11670      PUSH   HL
17AD CD3619 11680      CALL   PREPOZ    ; FIND WHAT IS
17B0 0C    11690      INC    C
17B1 CBB9  11700      RES    7,C
17B3 EB    11710      EX     DE,HL
17B4 B7    11720      OR     A
17B5 283E  11730      JR     Z,NEPREP   ; NOT RECOGNIZED; MAYBE EXPRESSION?
17B7 CD6819 11740      CALL   SKIPBL    ; SKIP POTENTIAL BLANKS
17BA F1    11750      POP    AF
17BB DD7E06 11760      LD     A,(IX+6)
17BE B1    11770      OR     C          ; STORE TOKEN IN OPERAND FIELD
17BF DD7706 11780      LD     (IX+6),A
17C2 79    11790      LD     A,C
17C3 FE03  11800      CP     3
17C5 301B  11810      JR     NC,ZATZAG  ; IF NOT IX OR IY
17C7 CD6919 11820      CALL   SKIP2     ; SKIP POTENTIAL BLANKS
17CA FE29  11830      CP     ')'
17CC 281B  11840      JR     Z,ZATZ2    ; THIS IS LIKE (IX+0) OR (IY+0)
17CE FE2D  11850      CP     '-'
17D0 2804  11860      JR     Z,ZNAK
17D2 FE2B  11870      CP     '+'
17D4 201C  11880      JR     NZ,ZATZ3
17D6 CD661B 11890 ZNAK CALL   IZRAZ     ; PUT EXPRESSION VALUE IN HL

; 011096

17DA EB      11910         EX      DE,HL
17DB CD4216  11920         CALL    ADJOV       ; TEST JUMP -128<DE<+127
17DE 5D      11930         LD      E,L         ; E=L0 BYTE
17DF F1      11940         POP     HL
17E0 181E    11950         JR      SKR1        ; FIND CLOSED PARENTHESIS

17E2 CD6919  11970 ZATZAG  CALL    SKIP2       ; SKIP BLANKS
17E5 FE29    11980         CP      ')'
17E7 2009    11990         JR      NZ,ZATZ3    ; IF NOT CLOSED PARENTHESIS
17E9 2F      12000 ZATZ2   CPL
17EA 23      12010         INC     HL
17EB DDAE06  12020 NOTZZ   XOR     (IX+6)      ; XOR WITH OLD STATE OF PARENTHESIS
17EE F0      12030         RET     P           ; RETURN IF FIRST NUMBER OF PARENTHESIS
17EF C32D19  12040 WHSK    JP      WHATHL      ; IF NOT - ERROR
17F2 AF      12050 ZATZ3   XOR     A           ; CLEAR A REG
17F3 18F6    12060         JR      NOTZZ

17F5 DDCB06F6 12080 NEPREF SET     6,(IX+6)    ; BIT 6 MEANS NUMERIC VALUE
17F9 E1      12090         POP     HL
17FA CD661B  12100         CALL    IZRAZ       ; CALCULATE NUMERIC EXPRESSION
17FD DD720B  12110         LD      (IX+8),D    ; PUT IT IN NUMERIC...
1800 DD7307  12120 SKR1    LD      (IX+7),E    ; ...OPERAND FIELD
1803 18DD    12130         JR      ZATZAG

1805 E5      12150 SUB1A   PUSH    HL
1806 11831F  12160         LD      DE,TABEL2-1 ; OPERAND TABLE
1809 CD3619  12170         CALL    PREPOZ      ; RECOGNIZE WORD IN TABLE
180C E1      12180         POP     HL
180D 20E0    12190 WHSK2   JR      NZ,WHSK     ; IF RECOGNIZED - MEANS THAT...
180F 11CA1E  12200 SUB1    LD      DE,TABEL1-1 ; ...OPERAND IN WRONG PLACE; ERROR!
1812 CD3619  12210         CALL    PREPOZ      ; RECOGNIZE WORD IN TABLE
1815 0C      12220         INC     C
1816 EB      12230         EX      DE,HL
1817 23      12240         INC     HL
1818 B7      12250         OR      A           ; IF NOT NZ
1819 C9      12260         RET                 ; MEANS RECOGNITION SUCCESSFUL
                12270

181A D602    12280 IFTXT0  SUB     2           ; 2 = 'TEXT' TOKEN
181C 201E    12290         JR      NZ,IF0      ; IF NOT SKIP
181E CD6819  12300         CALL    SKIPBL      ; SKIP EVENTUAL BLANKS
1821 FE22    12310         CP      '"'
1823 20CA    12320         JR      NZ,WHSK     ; IF NOT QUOTE
1825 23      12330         INC     HL          ; THEN ERROR
1826 22DF2B  12340         LD      (INS2+1),HL ; TEXT START TO TEXT REGISTER
1829 0E00    12350         LD      C,0
182B 7E      12360 FINDZN  LD      A,(HL)
182C FE22    12370         CP      '"'         ; END OF TEXT?
182E 23      12380         INC     HL
182F 2807    12390         JR      Z,IF0T      ; YES - GO OUT
1831 FE0D    12400         CP      0DH
1833 28BA    12410         JR      Z,WHSK      ; END OF LINE, NO QUOTE; WHAT
1835 0C      12420         INC     C
1836 18F3    12430         JR      FINDZN      ; CONTINUE SEARCHING QUOTE
1838 79      12440 IF0T    LD      A,C
1839 32DE2B  12450         LD      (INS2),A    ; NUMBER OF WORDS TEXT
183C CD6919  12460 IF0     CALL    SKIP2       ; SKIP EVENTUAL BLANKS
183F FE21    12470 IF01    CP      '!'
1841 2805    12480         JR      Z,REMJE     ; IF REM SKIP
1843 FE0D    12490         CP      0DH
1845 C0      12500         RET     NZ          ; RETURN IF NOT CR
1846 F1      12510         POP     AF          ; IF CR - REMOVE LAST RET...
1847 C9      12520         RET                 ; ...FROM STACK AND RETURN NO...
                12530                          ; ...ONE PLACE EARLIER

1848 23      12540 REMJE   INC     HL
1849 7E      12550         LD      A,(HL)      ; IF ':' - THIS IS REM; FIND END OF LINE

; 011097

184A FE0D    12560    CP      0DH             ; CR - END OF LINE
184C 20FA    12570    JR      NZ,REMJE        ; IT'S NOT END OF LINE
184E F1      12580    POP     AF              ; RETURN AND LOCATION EARLIER (AS AT 12510)
184F C9      12590    RET

1850 7E      12620 NCSLRR  LD      A,(HL)
1851 CD7301  12630    CALL    173H            ; IF IT'S 0-9 (NEXT DIGIT)
1854 1B      12640    DEC     DE              ; ...THEN RESET CARRY FLAG...
1855 D0      12650    RET     NC              ; ...AND RETURN
1856 13      12660    INC     DE  
1857 FE41    12670 LETNCA  CP      41H        ; IF IT'S A-Z (NEXT LETTER) - RESET CARRY
1859 D8      12680    RET     C
185A FE5F    12690    CP      5FH
185C 3F      12700    CCF
185D C9      12710    RET

185E CDD718  12730 JEDANX  CALL    JEDAN      ; CALCULATE ONE MEMBER AND VALUE IN HL
1861 ED4BEF2B 12740    LD      BC,(TEMP2)     ; TAKE PREVIOUS VALUE IN BC
1865 C9      12750    RET

1866        12770 IZRAZ   EQU     $
1866 EB     12780         EX      DE,HL
1867 EF     12790         RST     28H          ; THIS IS LD HL
1868 DF     12800         RST     18H          ; TEST IF NEXT CHARACTER IS...
1869 2B     12810         DEFB    '+'          ; ...PLUS...
186A 00     12820         DEFB    0            ; ...AND SKIP ONLY IT IF YOU ARE
186B FE2D   12830         CP      '-'          ; OR IF IT'S MINUS...
186D C4D718 12840         CALL    NZ,JEDAN     ; ...PUT MEMBER IN HL...
1870 22EF2B 12850 STORE   LD      (TEMP2),HL   ; ...STORE IN REGISTER OF PREVIOUS VALUE
1873 CD7B18 12860         CALL    CLAN         ; CALCULATE ONE MEMBER
1876 DA4F16 12870         JP      C,HOWHL      ; IF IT'S OVERFLOW
1879 18F5   12880         JR      STORE        ; CONTINUE MAIN LOOP OF CALCULATING EXPRESSION

187B DF     12900 CLAN    RST     18H          ; CALCULATE ONE MEMBER OF EXPRESSION AND VALUE IN HL
187C 2B     12910         DEFB    '+'          ; IS IT PLUS?
187D 05     12920         DEFB    CL1-$-1      ; IF NOT GO TO CL1
187E CD5E18 12930         CALL    JEDANX       ; CALCULATE MEMBER
1881 09     12940         ADD     HL,BC        ; ADD IT WITH PREVIOUS VALUE
1882 C9     12950         RET

1883 DF     12960 CL1     RST     18H
1884 2D     12970         DEFB    '-'          ; IS IT MINUS?
1885 0D     12980         DEFB    CL2-$-1      ; IF NOT GO TO CL2
1886 CDD718 12990         CALL    JEDAN
1889 B7     13000         OR      A
188A 44     13010         LD      B,H
188B 4D     13020         LD      C,L
188C 2AEF2B 13030         LD      HL,(TEMP2)
188F ED42   13040         SBC     HL,BC        ; SUBTRACT FROM PREVIOUS VALUE
1891 B7     13050         OR      A
1892 C9     13060         RET

1893 DF     13070 CL2     RST     18H
1894 3C     13080         DEFB    '<'          ; IS SHIFT LEFT?
1895 0C     13090         DEFB    CL3-$-1      ; IF NOT GO TO CL3
1896 CDD718 13100         CALL    JEDAN
1899 45     13110         LD      B,L          ; B=NUMBER OF SHIFTS
189A 2AEF2B 13120         LD      HL,(TEMP2)
189D 29     13130 ROTHL1  ADD     HL,HL        ; ADD IS SHIFT LEFT
189E 10FD   13140         DJNZ    ROTHL1       ; DO IT B TIMES
18A0 B7     13150         OR      A            ; CLEAR CARRY (NO OVERFLOW)
18A1 C9     13160         RET

18A2 DF     13170 CL3     RST     18H
18A3 3E     13180         DEFB    '>'          ; IS SHIFT RIGHT?
18A4 0F     13190         DEFB    CL4-$-1      ; IF NOT GO TO CL4
18A5 CDD718 13200         CALL    JEDAN
18A8 45     13210         LD      B,L
; 011098
18A9 2AEF2B 13220        LD      HL,(TEMP2)
18AC CB3C   13230 ROTHL2 SRL     H           ; SHIFT RIGHT 8 TIMES
18AE CB1D   13240        RR      L
18B0 10FA   13250        DJNZ    ROTHL2
18B2 B7     13260        OR      A
18B3 C9     13270        RET
18B4 DF     13280 CL4    RST     18H
18B5 23     13290        DEFB    '#'         ; IS IT '#' (MEANS AND)
18B6 0A     13300        DEFB    CL5-$-1     ; DON'T GO TO CL5
18B7 CD5E18 13310        CALL    JEDAN#
18BA 7C     13320        LD      A,H
18BB A0     13330        AND     B           ; AND HIGH BYTE
18BC 67     13340        LD      H,A
18BD 7D     13350        LD      A,L
18BE A1     13360        AND     C           ; AND LOW BYTE
18BF 6F     13370        LD      L,A
18C0 C9     13380        RET
18C1 FE29   13390 CL5    CP      ')'         ; TERMINATORS: BRACKET, COMMA
18C3 280C   13400        JR      Z,TERMIN
18C5 FE0D   13410        CP      0DH         ; END OF LINE
18C7 2808   13420        JR      Z,TERMIN
18C9 FE21   13430        CP      '!'         ; REM
18CB 2804   13440        JR      Z,TERMIN
18CD FE2C   13450        CP      ','         ; COMMA
18CF 205C   13460        JR      NZ,WHATHL
18D1 F1     13470 TERMIN POP     AF
18D2 2AEF2B 13480        LD      HL,(TEMP2)
18D5 EB     13490        EX      DE,HL       ; TAKE IN DE THE EXPRESSION
18D6 C9     13500        RET

                13510
                13520                         ; *** ONE MEMBER OF EXPRESSION CALCULATED IN HL ***
18D7 CD0501 13530 JEDAN  CALL    105H        ; SKIP POSSIBLE BLANKS
18DA CD7301 13540        CALL    173H        ; IF NOT DIGIT 0-9
18DD 380A   13550        JR      C,NEDEC     ; ...THEN SKIP
18DF 1B     13560        DEC     DE
18E0 CD6F19 13570        CALL    RELIX1      ; PREPARE FOR ARITHMETIC
18E3 CDD30C 13580        CALL    3283D       ; CALCULATE DECIMAL NUMBER
18E6 C30B13 13590        JP      RELIX2      ; RETURN 1%
18E9 FE26   13600 NEDEC  CP      '&'         ; IS IT HEX NUMBER SIGN?
18EB 2016   13610        JR      NZ,NEHEX    ; NO - SKIP
18ED 13     13620        INC     DE
18EE CD6501 13630        CALL    357D        ; READ HEX DIGIT
18F1 D4AF16 13640        JP      C,HOWHL     ; NOT HEX DIGIT? HOW!
18F4 1B     13650        DEC     DE
18F5 EF     13660        RST     28H         ; THIS IS LD HL,0
18F6 CD6501 13670 GOCONV CALL    357D        ; READ HEX DIGIT
18F9 D8     13680        RET     C           ; NOT HEX DIGIT - END OF JOB
18FA CD3714 13690        CALL    RLC4        ; ROTATE 4 PLACES LEFT (+16)
18FD 01F618 13700        LD      BC,GOCONV   ; PREPARE RET ADDRESS
1900 C3F20D 13710        JP      357DD       ; CONTINUE CONVERSION
1903 EB     13720 NEHEX  EX      DE,HL
1904 CD5718 13730        CALL    LETNCA      ; IF LETTER A-Å 
1907 3810   13740        JR      C,NLABEL    ; NO - LABEL IS NOT LABEL
1909 CD0412 13750        CALL    LOCATE      ; LOCATE LABEL
190C 201F   13760        JR      NZ,WHATHL   ; NO JE - WHAT?
190E 3ADD2B 13770        LD      A,(INS1)
1911 FE06   13780        CP      6           ; IF OPKOD=ORG THEN WHAT
1913 2818   13790        JR      Z,WHATHL    ; (WE MUST NOT CALL ON LABEL)
1915 50     13800        LD      D,B
1916 59     13810        LD      E,C
1917 EB     13820        EX      DE,HL
1918 C9     13830        RET
1919 EB     13840 NLABEL EX      DE,HL
191A DF     13850        RST     18H
191B 22     13860        DEFB    '"'
191C 09     13870        DEFB    NIZAGR-$-1  ; NOT ASCII - GO FURTHER
; 011099

191D 1A      13880 ASCX   LD    A,(DE)      ; TAKE ASCII CHARACTER
191E 13      13890        INC   DE
191F 6F      13900        LD    L,A
1920 2600    13910        LD    H,0         ; PLACE IT IN HL
1922 DF      13920        RST   18H
1923 22      13930        DEFB  '"'         ; CLOSING CHARACTER NEEDED - THIS IS HOW IT SHOULD BE IF IT'S NOT - ERROR
1924 0B      13940        DEFB  WHATHL-$-1
1925 C9      13950        RET
1926 DF      13960 NIZAGR RST   18H
1927 24      13970        DEFB  '?'         ; IS IT A PC LOCATION?
1928 04      13980        DEFB  WHATHL-$-1  ; IT - THAT IS NOT NOTHING; ERROR
1929 2AEA2B  13990        LD    HL,(ADDR)   ; YES - TAKES FROM PC REGISTER
192C C9      14000        RET
192D ED5B9F2A 14010 WHATHL LD    DE,(2A9FH)  ; *** WHAT *** INPUT POINT
1931 13      14020        INC   DE
1932 13      14030        INC   DE          ; PUTS QUESTION MARK AT START OF LINE
1933 C38F07  14040        JP    78FH        ; RIGHT TO WHAT IN ROM-U 1

1936 067F    14070 PREPOZ LD    B,7FH       ; **** WORD RECOGNITION ****
1938 7E      14080        LD    A,(HL)
1939 4E      14090 Z1C0C  LD    C,(HL)
193A EB      14100        EX    DE,HL
193B 23      14110 Z1C0E  INC   HL          ; FIND WORD START IN TABLE (BIT 7=1)
193C B6      14120        OR    (HL)
193D F23B19  14130        JP    P,Z1C0E     ; SEARCH FOR START
1940 04      14140        INC   B
1941 7E      14150        LD    A,(HL)      ; IF (HL)=80
1942 E67F    14160        AND   7FH         ; THEN IT'S THE END OF TABLE
1944 C8      14170        RET   Z           ; RETURN IF =80 (CHARACTER NOT RECOGNIZED)
1945 B9      14180        CP    C           
1946 20F3    14190        JR    NZ,Z1C0E    ; THIS CHARACTER IS NOT SAME - TRY NEW WORD
1948 EB      14200        EX    DE,HL       ; CHARACTER SAME - THEREFORE IT'S GOOD
1949 E5      14210        PUSH  HL
194A 13      14220 Z1C1D  INC   DE
194B 1A      14230        LD    A,(DE)      ; TAKE NEW CHARACTER FROM TABLE
194C E7      14240        OR    A
194D FA5919  14250        JP    M,Z1C39     ; THIS IS THEN START OF NEXT WORD
1950 4F      14260        LD    C,A
1951 23      14270 Z1C2B  INC   HL
1952 7E      14280        LD    A,(HL)      ; TAKE NEW CHARACTER FROM PROG. LINE
1953 B9      14290        CP    C
1954 28F4    14300        JR    Z,Z1C1D     ; IF IT'S SAME
1956 E1      14310 PHL    POP   HL
1957 18E0    14320        JR    Z1C0C       ; NOT SAME; TRY NEW WORD
1959 23      14330 Z1C39  INC   HL          ; SUCCESSFUL COMPARISON; RECOGNIZED WORD
195A CD501B  14340        CALL  NCSLBR      ; IS IT THE END OF WORD IN PROGRAM?
195D 2B      14350        DEC   HL
195E 3803    14360        JR    C,Z1C39     ; YES; LAST TEST SUCCESSFUL
1960 1B      14370        DEC   DE          ; NOT END - SO COMPARISON UNSUCCESSFUL
1961 18F3    14380        JR    PHL         ; TRY SOME OTHER WORD FROM TABLE
1963 4B      14390 X1C39  LD    C,B         ; C=B=TOKEN
1964 F1      14400        POP   AF          ; A WILL COME TO IT; THIS IS JB; CHARACTER TO BE...
1965 EB      14410        EX    DE,HL
1966 B7      14420        OR    A           ; ...RECOGNIZED WORD
1967 C9      14430        RET

                14440
1968 23      14450 SKIPBL INC   HL          ; SKIP BLANKS FROM NEXT POSITION
1969 EE      14460 SKIP2  EX    DE,HL       ; SKIP BLANKS FROM THIS POSITION
196A CD0501  14470        CALL  105H        ; SKIP POSSIBLE BLANKS
196D EB      14480        EX    DE,HL
196E C9      14490        RET
                14500
                14510
196F DD22F42B 14520 RELIX1 LD    (IXPOS2),IX ; SAVE OLD IX...
1973 DD21AC2A 14530        LD    IX,2AACH    ; ...AND PREPARE IX FOR...
                                             ; ...ARITHMETIC IN ROM-U 1
                                                                                          
;011100
1977 C9      14540        RET
1978         14550
197B ED7S312C 14560 BRKPT EQU      $            ; *** BREAKPOINT (REG) ***
197B         14570        LD        (FIELD+SPACE-1),SP    ; SAVE SP FOR RETURN
197C 31312C  14580        LD        SP,FIELD+SPACE-1      ; TAKE NEW SP
197F F5      14590        PUSH      AF           ; MOVES ALL REGISTERS TO MEMORY
1980 C5      14600        PUSH      BC
1981 D5      14610        PUSH      DE
1982 E5      14620        PUSH      HL
1983 DDE5    14630        PUSH      IX
1985 2A312C  14640        LD        HL,(FIELD+SPACE-1)
1988 23      14650        INC       HL
1989 23      14660        INC       HL
198A E5      14670        PUSH      HL           ; HL IS HERE SP+2 (SP BEFORE NEG...)
198B 5E      14680        LD        E,(HL)       ; ...WHAT CAME TO REG
198C 23      14690        INC       HL
198D 56      14700        LD        D,(HL)       ; DE = LAST ITEM ON STACK-U
198E D9      14710        EXX
198F 08      14720        EX        AF,AF'
1990 F5      14730        PUSH      AF           ; PUTS ALTERNATIVE REGISTERS IN MEM
1991 C5      14740        PUSH      BC
1992 D5      14750        PUSH      DE
1993 E5      14760        PUSH      HL
1994 FDE5    14770        PUSH      IY
1996 D9      14780        EXX
1997 D5      14790        PUSH      DE           ; PUTS LAST ITEM FROM STACK-A IN MEM
1998 CDED02  14800        CALL      2EDH         ; IDI TO NEW ORDER (IF NOT ALREADY BEGINNING)
199B 11DB1F  14810        LD        DE,MASLOV
199E CD3789  14820        CALL      937H         ; PRINT: AF BC DE HL IXIY SP()
19A1 11302C  14830        LD        DE,FIELD+SPACE-2
19A4 0602    14840        LD        B,2          ; TWO LINES TO PRINT
19A6 C5      14850 RED    PUSH      BC
19A7 0606    14860        LD        B,6          ; SIX MEMBERS TO PRINT
19A9 3E20    14870 SABL   LD        A,' '        ; FIRST BLANK
19AB E7      14880        RST       20H
19AC 1A      14890        LD        A,(DE)       ; TAKES FROM MEMORY IN GROUPS OF...
19AD 1B      14900        DEC       DE           ; ...TWO BYTES WHAT WAS PUT...
19AE 67      14910        LD        H,A          ; ...IN LINES 14580-14790
19AF 1A      14920        LD        A,(DE)
19B0 1B      14930        DEC       DE
19B1 6F      14940        LD        L,A          ; HL=TWO-BYTE VALUE OF PAIR REGISTERS
19B2 CD5713  14950        CALL      HEX16        ; WRITE HL
19B5 10F2    14960        DJNZ      SABL         ; DO THAT 6 TIMES
19B7 3E0D    14970        LD        A,0DH        ; GO TO NEW LINE
19B9 E7      14980        RST       20H
19BA C1      14990        POP       BC
19BB 10E9    15000        DJNZ      RED          ; DO ONE MORE TIME (FOR ALT.REG.)
19BD 2A972A  15010        LD        HL,(SHOMEM)
19C0 7C      15020        LD        A,H
19C1 B5      15030        OR        L            ; SHOULD MEMORY BE SHOWN?
19C2 3AB22B  15040        LD        A,(SHOFOR)
19C5 CDE19   15050        CALL      NZ,PMEM      ; IF NEEDED
19C8 CDF50C  15060        CALL      0CF5H        ; WAIT FOR ANY KEY TO BE PRESSED
19CB F1      15070        POP       AF           ; RETURNS ALL VALUES FROM MEMORY...
19CC F1      15080        POP       AF           ; ...TO CPU REGISTERS...
19CD E1      15090        POP       HL           ; ...AS I SET WHEN IT...
19CE D1      15100        POP       DE           ; ...NOTHING HAPPENED
19CF C1      15110        POP       BC
19D0 F1      15120        POP       AF
19D1 08      15130        EX        AF,AF'
19D2 D9      15140        EXX
19D3 F1      15150        POP       AF
19D4 F1      15160        POP       AF
19D5 E1      15170        POP       HL
19D6 D1      15180        POP       DE
19D7 C1      15190        POP       BC

; 011101
19D8 F1      15200      POP    AF
19D9 ED7B312C 15210      LD     SP,(FIELD+SPACE-1)
19DD C9      15220      RET                         ; At the end is taken 1 stack pointer

19DE 57      15240 PMEM  LD     D,A                ; *** Print HEX number from HL total A rows
19DF CD4C13  15250 PMEM2 CALL   HEX16B            ; First memory address
19E2 3E3A    15260      LD     A,':'              ; Then two dots
19E4 E7      15270      RST    20H
19E5 0608    15280      LD     B,8                ; 8 bytes per row
19E7 3E20    15290 RED8  LD     A,' '             ; First blank
19E9 E7      15300      RST    20H
19EA 7E      15310      LD     A,(HL)
19EB CD5C13  15320      CALL   HEX8               ; Print byte
19EE 23      15330      INC    HL
19EF 10F6    15340      DJNZ   RED8               ; And so eight times
19F1 CDFF02  15350      CALL   2FFH               ; Test 'BREAK' or 'DEL' key
19F4 3E0D    15360      LD     A,0DH
19F6 E7      15370      RST    20H                ; New row
19F7 15      15380      DEC    D
19F8 20E5    15390      JR     NZ,PMEM2          ; And so D rows
19FA C9      15400      RET

19FB 3E03    15450 DEL   LD     A,3
19FD F5      15460      PUSH   AF
19FE CF      15470      RST    8                  ; Calculate first member ('DD' line)
19FF D5      15480      PUSH   DE
1A00 CDF207  15490      CALL   7F2H              ; Does this line exist?
1A03 2012    15500      JR     NZ,SKRHOW         ; Does not exist! HOW
1A05 E1      15510      POP    HL
1A06 D5      15520      PUSH   DE
1A07 D5      15530      PUSH   DE
1A08 EB      15540      EX     DE,HL
1A09 CD0500  15550      CALL   5                 ; Test memory and calculate 'DO' line
1A0C CDF207  15560      CALL   7F2H              ; Does this line exist?
1A0F 2006    15570      JR     NZ,SKRHOW         ; No? Error
1A11 E3      15580      EX     (SP),HL           ; Check if second is greater than first
1A12 D7      15590      RST    10H
1A13 E3      15600      EX     (SP),HL
1A14 DA5903  15610      JP     C,359H            ; If yes, throw everything from first to second
1A17 C35B06  15620 SKRHOW JP    65BH             ; If not, HOW

1A1A CF      15640 NAME  RST    8                 ; *** REN *** Limited renumbering
1A1B 7C      15650      LD     A,H
1A1C B7      15660      OR     A                 ; If step is greater than 255
1A1D D5      15670      PUSH   DE
1A1E 20F7    15680      JR     NZ,SKRHOW         ; ...then HOW
1A20 B5      15690      OR     L                 ; If step = 0
1A21 28F4    15700      JR     Z,SKRHOW          ; ...then HOW
1A23 44      15710      LD     B,H
1A24 4D      15720      LD     C,L
1A25 EF      15730      RST    28H               ; This is LD HL,0
1A26 E5      15740      PUSH   HL
1A27 ED5B362C 15750      LD     DE,(2C36H)       ; Start of BASIC program
1A2B 2A382C  15760 THRU  LD     HL,(2C38H)       ; End of BASIC program
1A2E EB      15770      EX     DE,HL
1A2F D7      15780      RST    10H               ; Sort current pointer (DE) and end
1A30 EB      15790      EX     DE,HL
1A31 E1      15800      POP    HL
1A32 3014    15810      JR     NC,NAMED          ; If they are same or current is greater-ready
1A34 09      15820      ADD    HL,BC             ; Add with step
1A35 CB7C    15830      BIT    7,H               ; If is overflow (>7FFF) HOW
1A37 20DE    15840      JR     NZ,SKRHOW
1A39 E5      15850      PUSH   HL

; 011102

1A3A EB     15860      EX    DE,HL
1A3B 73     15870      LD    (HL),E      ; NEW LINE NUMBER - LOW BYTE
1A3C 23     15880      INC   HL
1A3D 72     15890      LD    (HL),D      ; NEW LINE NUMBER - HIGH BYTE
1A3E EB     15900      EX    DE,HL
1A3F 13     15910 FOD  INC   DE          ; FIND END OF LINE
1A40 1A     15920      LD    A,(DE)
1A41 FE0D   15930      CP    0DH
1A43 20FA   15940      JR    NZ,FOD      ; NOT END YET - CONTINUE SEARCHING
1A45 13     15950      INC   DE          
1A46 18E3   15960      JR    THRU        ; GO TO NEXT LINE
1A48 D1     15970 NAMED POP   DE
1A49 F7     15980 KAD48 RST   30H        ; SET BASIC

1A4A        16000 FIND  EQU   $          ; *** / *** (FINDING SEQUENCE OF CHARACTERS IN PROGRAM)
1A4A D5     16010      PUSH  DE
1A4B 2A362C 16020      LD    HL,(2C36H)  ; START OF BASIC
1A4E 2B     16030      DEC   HL
1A4F 23     16040 TRAZ1 INC   HL
1A50 ED5B3B2C 16050 TRAZ19 LD DE,(2C3BH) ; END OF BASIC
1A54 D7     16060      RST   10H
1A55 3031   16070      JR    NC,IZLAZF   ; IF EQUAL - FINISHED
1A57 CDFF02 16080      CALL  2FFH        ; 'BREAK' - 'DEL' TEST
1A5A 44     16090      LD    B,H
1A5B 4D     16100      LD    C,L
1A5C 23     16110      INC   HL
1A5D E5     16120      PUSH  HL
1A5E E1     16130 NISTO POP   HL
1A5F 23     16140      INC   HL
1A60 7E     16150      LD    A,(HL)
1A61 FE0D   16160      CP    0DH         ; END OF LINE?
1A63 28EA   16170      JR    Z,TRAZ1     ; YES- SEARCH NEXT
1A65 D1     16180      POP   DE
1A66 D5     16190      PUSH  DE
1A67 E5     16200      PUSH  HL
1A68 1A     16210 TRAZ12 LD A,(DE)       ; GET NEXT CHARACTER
1A69 BE     16220      CP    (HL)        ; COMPARE WITH CHARACTER IN PROGRAM
1A6A 20F2   16230      JR    NZ,NISTO    ; NOT SAME - START OVER
1A6C 13     16240      INC   DE
1A6D 1A     16250      LD    A,(DE)      ; GET NEXT CHARACTER
1A6E FE0D   16260      CP    0DH         ; END OF LINE?
1A70 2803   16270      JR    Z,TOTAL     ; YES - COMPARISON SUCCESSFUL
1A72 23     16280      INC   HL
1A73 18F3   16290      JR    TRAZ12      ; NOT SUCCESSFUL - CONTINUE SEARCH
1A75 F1     16300 TOTAL POP   AF
1A76 D5     16310      PUSH  DE
1A77 C5     16320      PUSH  BC
1A78 C5     16330      PUSH  BC
1A79 D1     16340      POP   DE
1A7A CD3109 16350      CALL  2353D       ; PRINT LINE ON SCREEN
1A7D E1     16360      POP   HL
1A7E D1     16370      POP   DE
1A7F 23     16380      INC   HL
1A80 23     16390 FEND  INC   HL         ; FIND END WHERE?
1A81 7E     16400      LD    A,(HL)
1A82 FE0D   16410      CP    0DH
1A84 20FA   16420      JR    NZ,FEND     ; NOT CR YET
1A86 18C7   16430      JR    TRAZ1       ; SEARCH IN NEXT LINE
1A88 D1     16440 IZLAZF POP   DE
1A89 13     16450 FEND2 INC   DE         ; FIND END WHERE?
1A8A 1A     16460      LD    A,(DE)
1A8B FE0D   16470      CP    0DH
1A8D 20FA   16480      JR    NZ,FEND2    ; NOT CR YET
1A8F F7     16490      RST   30H         ; SET BASIC

1A90 CD6010 16510 LDUMP CALL  COPY       ; *** LDUMP *** LINE PRINTER FLAG

;011103
1A93      16520 DUMP    EQU    $               ; *** DUMP *** Memory Print Subroutine
1A93 CF    16530        RST    8               ; From which address?
1A94 E5    16540        PUSH   HL              ; Address is in HL
1A95 CD0500 16550        CALL   5              ; Test character 1 from which address?
1A98 7D    16560        LD     A,L
1A99 B7    16570        OR     A               ; If it's more than 0 rows
1A9A E1    16580        POP    HL
1A9B D5    16590        PUSH   DE
1A9C C4DE19 16600        CALL   NZ,PMEM        ; Call memory printing
1A9F D1    16610        POP    DE
1AA0 F7    16620        RST    30H             ; Return to BASIC
                16630
                16640                           ; ***** FLOATING-POINT CONSTANTS *****
1AA1 F504    16650 C2    DEFW   04F5H          ; 0.707107
1AA3 3500    16660        DEFW   0035H
1AA5 AE56    16670 C3    DEFW   56AEH          ; 0.598979
1AA7 1900    16680        DEFW   0019H
1AA9 F322    16690 C4    DEFW   22F3H          ; 0.961471
1AAB 7600    16700        DEFW   0076H
1AAD 3DAA    16710 C5    DEFW   0AA3DH         ; 2.88539
1AAF 3801    16720        DEFW   0138H
1AB1 D60F    16730 CPI   DEFW   0FD6H          ; 3.1415926
1AB3 4901    16740        DEFW   0149H
1AB5 D60F    16750 PIPOLA DEFW   0FD6H          ; PI/2
1AB7 C900    16760        DEFW   00C9H
1AB9 D60F    16770 PI2   DEFW   0FD6H          ; 2*PI
1ABB C901    16780        DEFW   01C9H
1ABD 6D12    16790 X1EM3  DEFW   126DH          ; 1E-3
1ABF 837B    16800        DEFW   7B83H
                16810
1AC1 0000    16820 CS1   DEFW   0000H          ; -6
1AC3 C0B1    16830        DEFW   81C0H
1AC5 0000    16840 CS2   DEFW   0000H          ; 120
1AC7 F003    16850        DEFW   03F0H
1AC9 0000    16860 CS3   DEFW   8000H          ; -5040
1ACB 9086    16870        DEFW   8690H
1ACD 0030    16880 CS4   DEFW   3000H          ; 362880
1ACF B109    16890        DEFW   09B1H
                16900
1AD1 1372    16910 CX2   DEFW   7213H          ; 0.693147
1AD3 3100    16920        DEFW   0031H
                16930
1AD5 4FFB    16940 CE1   DEFW   0FB4FH         ; 2.71828182
1AD7 2D01    16950        DEFW   012DH
1AD9 5C0B    16960 CE2   DEFW   0B5CH          ; 1.3888889E-3
1ADB B67B    16970        DEFW   7BB6H
1ADD 85B8    16980 CE3   DEFW   8885H          ; 8.333333E-3
1ADF 0B7D    16990        DEFW   7D0BH
1AE1 0BAA    17000 CE4   DEFW   0AA0BH         ; 0.0416667
1AE3 2A7E    17010        DEFW   7E2AH
1AE5 A9AA    17020 CE5   DEFW   0AAA9H         ; 0.166667
1AE7 2A7F    17030        DEFW   7F2AH
1AE9 0000    17040 C1    DEFW   0              ; 0.5
1AEB 0000    17050        DEFW   0
1AED 0000    17060 C7    DEFW   0              ; 1
1AEF 8000    17070        DEFW   80H
1AF1 0000    17080 CE8   DEFW   0              ; 1
1AF3 8000    17090        DEFW   80H
                17100
1AF5 58D7    17110 CT1   DEFW   0D758H         ; 2.86623E-3
1AF7 3B7C    17120        DEFW   7C3BH
1AF9 EC6D    17130 CT2   DEFW   6DECH          ; -1.61657E-2
1AFB 84FD    17140        DEFW   0FD84H
1AFD F6C1    17150 CT3   DEFW   0C1F6H         ; 4.29096E-2
1AFF 2F7E    17160        DEFW   7E2FH
1B01 1C31    17170 CT4   DEFW   311CH          ; -7.5289E-2

; 011104

1B03 9AFE     17180      DEFW    0FE9AH
1B05 B13D     17190 CT5  DEFW    3DB1H      ; 0.106563
1B07 DA7E     17200      DEFW    7EDAH  
1B09 C67F     17210 CT6  DEFW    7FC6H      ; -0.142089
1B0B 11FF     17220      DEFW    0FF11H
1B0D 03BC     17230 CT7  DEFW    0BC03H     ; 0.199936
1B0F 4C7F     17240      DEFW    7F4CH
1B11 7CAA     17250 CT8  DEFW    0AA7CH     ; -0.333332
1B13 AAFF     17260      DEFW    0FFAAH
1B15 DE2E     17280 RADDEG DEFW   2EDEH     ; 57.29578
1B17 6503     17290      DEFW    0365H

1B19 21B11A   17320 P1   LD      HL,CP1     ; P1 CONSTANT
1B1C C3450A   17330      JP      0A45H

1B1F CD221B   17350 DUBL2 CALL    DUBLIX    ; DUPLICATE IX IN ARITHMETIC STACK - TWICE
1B22 0605     17360 DUBLIX LD      B,5      ; DUPLICATE IX IN ARITHMETIC STACK - ONCE
1B24 DD7EFB   17370 MOVE5 LD      A,(IX-5)
1B27 DD7700   17380      LD      (IX),A
1B2A DD23     17390      INC     IX
1B2C 10F6     17400      DJNZ    MOVE5      ; MOVE 5 BYTES

1B2E C9       17410      RET

1B2F CD221B   17450 CP0  CALL    DUBLIX    ; *** COMPARE (IX) WITH ZERO
1B32 EF       17460      RST     28H        ; THIS IS LD HL
1B33 CDBCOA   17470      CALL    0ABCH     ; MOVE HL TO (IX)
1B36 180B     17480      JR      COMP      ; COMPARE (IX-5) WITH (IX)

1B38 21ED1A   17500 CP1  LD      HL,C7     ; *** COMPARE (IX) WITH ONE
1B3B E5       17510 CPHL PUSH    HL
1B3C CD221B   17520      CALL    DUBLIX    ; DUPLICATE (IX)
1B3F E1       17530      POP     HL
1B40 CD450A   17540 CPHL1 CALL    0A45H     ; STORE (HL) TO (IX)
1B43 C3100B   17550 COMP JP      0B10H     ; COMPARE (IX-5) WITH (IX)

1B46 01F6FF   17580 IXM10 LD     BC,0FFFFH-9 ; IX = IX - 10
1B49 1803     17590      JR      SKRBC
1B4B 010500   17600 IX5  LD      BC,5      ; IX = IX + 5
1B4E DD09     17610 SKRBC ADD     IX,BC
1B50 C9       17620      RET

1B51 21F6FF   17640 ISPOD2 LD    HL,0FFFFH-9 ; TAKE TWO NUMBERS FROM ARITHMETIC STACK...
1B54 1803     17650      JR      SKRISP    ; ...BUT SAVE THE LAST ONE
1B56 21F1FF   17660 ISPOD3 LD    HL,0FFFFH-14 ; TAKE THREE NUMBERS FROM ARITHMETIC STACK...
1B59 D5       17670 SKRISP PUSH   DE        ; ...BUT SAVE THE LAST ONE
1B5A DDE5     17680      PUSH    IX        ; STORE HL/5 NUMBERS TO ARITHMETIC STACK...
1B5C D1       17690      POP     DE        ; ...BUT SAVE THE LAST ONE
1B5D 19       17700      ADD     HL,DE
1B5E 010500   17710      LD      BC,5
1B61 EDB0     17720      LDIR
1B63 D5       17730      PUSH    DE
1B64 DDE1     17740      POP     IX
1B66 D1       17750      POP     DE
1B67 C9       17760      RET

1B6B         17790 LOG   EQU     $         ; NATURAL LOGARITHM
1B6B CD8107   17800 LOGIT CALL    781H
1B6E CD2F1B   17810 LOGIT2 CALL   CP0
1B6E DA5A06   17820      JP      C,65AH
1B71 CA5A06   17830      JP      Z,65AH

; 011105

1B74 DD360F00 17840      LD    (IX+15),0    ; exponent = 0
1B78 CD3B1B   17850 CONT1 CALL  CP1         ; less than 1?
1B7B 380B     17860      JR    C,OVER1      ; yes, goto
1B7D 21E91A   17870      LD    HL,C1        ; multiply by 0.5
1B80 CDF31B   17880      CALL  PUTAHL
1B83 DD340F   17890      INC   (IX+15)      ; increase exponent
1B86 18F0     17900      JR    CONT1
1B88 21E91A   17910 OVER1 LD    HL,C1        ; greater than 0.5?
1B8B CD3B1B   17920      CALL  CPHL
1B8E 380B     17930      JR    C,OVER2      ; yes, goto
1B90 21E91A   17940      LD    HL,C1        ; multiply by 0.5 (*2)
1B93 CD1C1C   17950      CALL  KRDZHL
1B96 DD350F   17960      DEC   (IX+15)      ; decrease exponent
1B99 18ED     17970      JR    OVER1
1B9B CD221B   17980 OVER2 CALL  DUBLIX      ; double arith
1B9E 21A11A   17990      LD    HL,C2        ; arith = arith - 0.707107
1BA1 CD7B1D   18000      CALL  MINHL
1BA4 CD511B   18010      CALL  ISPOD2       ; compare arith
1BA7 21A11A   18020      LD    HL,C2        ; arith = arith + 0.707107
1BAA CDD41C   18030      CALL  PLUSHL
1BAD CDF70A   18040      CALL  KROZ         ; division pregled(ix)
1BB0 CDC81C   18050      CALL  MOVE0
1BB3 CD1F1B   18060      CALL  DUBL2
1BB6 CDE60A   18070      CALL  PUTA         ; *
1BB9 21A51A   18080      LD    HL,C3        ; arith = arith * 0.508919
1BBC CDF31B   18090      CALL  PUTAHL
1BBF 21A91A   18100      LD    HL,C4        ; arith = arith + 0.961471
1BC2 CDD41C   18110      CALL  PLUSHL
1BC5 CD511B   18120      CALL  ISPOD2       ; compare arith
1BC8 CD221B   18130      CALL  DUBLIX
1BCB CDE60A   18140      CALL  PUTA         ; *
1BCE CDE60A   18150      CALL  PUTA         ; *
1BD1 21AD1A   18160      LD    HL,C5        ; arith = arith + 2.88539
1BD4 CDD41C   18170      CALL  PLUSHL
1BD7 CDE60A   18180      CALL  PUTA         ; *
1BDA DD6E0F   18190      LD    L,(IX+15)
1BDD 2600     18200      LD    H,0          ; positive
1BDF CB7D     18210      BIT   7,L          ; negative
1BE1 2801     18220      JR    Z,POZL
1BE3 25       18230      DEC   H
1BE4 CDC80A   18240 POZL CALL  0ABC8        ; (ix)->HL
1BE7 CD320B   18250      CALL  PLUS         ; +
1BEA 21E91A   18260      LD    HL,C1
1BED CD7B1D   18270      CALL  MINHL        ; arith = arith - 0.5
1BF0 21D11A   18280      LD    HL,CX2       
1BF3 CD450A   18290 PUTAHL CALL  0A45H      ; arith = arith * 0.693147
1BF6 C3E60A   18300      JP    PUTA

1BF9 CD8107   18320 ABS  CALL  7B1H         ; ABSOLUTE VALUE
1BFC DD7EFF   18330 ABSA LD    A,(IX-1)
1BFF DDC8FFBE 18340 ABS2 RES   7,(IX-1)
1C03 C9       18350      RET

1C04 D5       18370 TAN  PUSH  DE           ; TANGENT
1C05 CD301C   18380      CALL  SIN
1C08 D1       18390      POP   DE
1C09 CD241C   18400      CALL  COS
1C0C C3F70A   18410 ZAKROZ JP   KROZ

1C0F 01FC1B   18430 ABSDEG LD   BC,ABSA     ; TAKES ABSOLUTE VALUE OF EXPRESSION...
1C12 C5       18440      PUSH  BC           ; ...DIVIDES IT WITH CONSTANT 57.29578...
1C13 DF       18450      RST   18H          ; ...FOLLOWED BY LETTER D (DEGREE)
1C14 44       18460      DEFB  'D'
1C15 BE       18470      DEFB  NODEGR-$-1
1C16 CD8107   18480      CALL  7B1H
1C19 21151B   18490      LD    HL,RADDEG

; 011106

1C1C CD450A 18500 KROZHL CALL   0A45H
1C1F 18EB    18510        JR     ZAKROZ
                18520
1C21 C38107   18530 NODEGR JP     781H
                18540
1C24 CD0F1C   18550 COS    CALL   ABSDEG    ; COSINE
1C27 21B51A   18560        LD     HL,PIPOLA  
1C2A CD041C   18570        CALL   PLUSHL
1C2D AF      18580        XOR    A
1C2E 1804    18590        JR     KAOSIN
                18600
1C30 CD0F1C   18610 SIN    CALL   ABSDEG    ; SINE
1C33 07      18620        RLCA
1C34 DD7714   18630 KAOSIN LD     (IX+20),A  ; COSINE CONTINUES AS SINE
1C37 21B91A   18640        LD     HL,PI2
1C3A E5      18650        PUSH   HL
1C3B CD3B1B   18660        CALL   CPHL
1C3E E1      18670        POP    HL
1C3F 3814    18680        JR     C,LTH2PI
1C41 E5      18690        PUSH   HL
1C42 CD1C1C   18700        CALL   KROZHL
1C45 CD221B   18710        CALL   DUBLIX
1C48 CD6D0A   18720        CALL   0A6DH
1C4B CDBC0A   18730        CALL   0ABCH
1C4E CD1E0B   18740        CALL   MINUS
1C51 E1      18750        POP    HL
1C52 CDF31B   18760        CALL   PUTAHL
1C55         18770 LTH2PI EQU    $
1C55 21B11A   18780        LD     HL,CPI
1C58 E5      18790        PUSH   HL
1C59 CD3B1B   18800        CALL   CPHL
1C5C E1      18810        POP    HL
1C5D 3806    18820        JR     C,LTHPI
1C5F CD7B1D   18830        CALL   MINHL
1C62 DD3414   18840        INC    (IX+20)
1C65         18850 LTHPI  EQU    $
1C65 21B51A   18860        LD     HL,PIPOLA
1C68 CD3B1B   18870        CALL   CPHL
1C6B 380F    18880        JR     C,LTH90
1C6D CD221B   18890        CALL   DUBLIX
1C70 CD461B   18900        CALL   IXM10
1C73 CD191B   18910        CALL   PI
1C76 CD4B1B   18920        CALL   IX5
1C79 CD1E0B   18930        CALL   MINUS
1C7C         18940 LTH90  EQU    $
1C7C 21BD1A   18950        LD     HL,X1EM3
1C7F CD3B1B   18960        CALL   CPHL
1C82 D8      18970        RET    C
1C83 CD1F1B   18980        CALL   DUBL2
1C86 21BD1A   18990        LD     HL,CS1-4
1C89 0604    19000        LD     B,4
1C8B C5      19010 D04    PUSH   BC
1C8C E5      19020        PUSH   HL
1C8D CD561B   19030        CALL   ISPOD3
1C90 CD561B   19040        CALL   ISPOD3
1C93 CDE60A   19050        CALL   PUTA
1C96 CD561B   19060        CALL   ISPOD3
1C99 CDE60A   19070        CALL   PUTA
1C9C DDE5    19080        PUSH   IX
1C9E 01ECFF   19090        LD     BC,0FFFFH-19
1CA1 DD09    19100        ADD    IX,BC
1CA3 21BF00   19110        LD     HL,15
1CA6 CD591B   19120        CALL   SKRISP
1CA9 DDE1    19130        POP    IX
1CAB E1      19140        POP    HL
1CAC 23      19150        INC    HL

; 011107
1CAD 23    19160      INC    HL
1CAE 23    19170      INC    HL
1CAF 23    19180      INC    HL
1CB0 E5    19190      PUSH   HL
1CB1 CD1C1C 19200     CALL   KRDZHL
1CB4 CD320B 19210     CALL   PLUS
1CB7 E1    19220      POP    HL
1CB8 C1    19230      POP    BC
1CB9 1000  19240      DJNZ   D04

1CBB DDCB0446 19260   BIT    0,(IX+10)
1CBF 2804  19270      JR     Z,MOVE02
1CC1 DDCBFFFE 19280   SET    7,(IX-1)
1CC5 CDC81C 19290 MOVE02 CALL MOVE0
1CC8 CD461B 19300 MOVE0 CALL 1XM10      ; IX=IX-10
1CCB EF    19310 MOVE  RST   28H        ; HL<-0
1CCC CDBC0A 19320     CALL   0ABCH      ; HL on stack
1CCF CD4B1B 19330     CALL   1X5        ; IX=IX+5
1CD2 1803  19340      JR     ZAPLUS
1CD4 CD450A 19350 PLUSHL CALL 0A45H
1CD7 C3320B 19360 ZAPLUS JP  PLUS2

1CDA DF    19390 POW   RST    1BH       ; EXPONENTIATION
1CDB 2E    19400      DEFB   '('
1CDC 58    19410      DEFB   WH-$-1
1CDD CDB20A 19420     CALL   0AB2H
1CE0 CD681B 19430     CALL   LOGIT2
1CE3 DF    19440      RST    1BH
1CE4 2C    19450      DEFB   ','
1CE5 4F    19460      DEFB   WH-$-1
1CE6 CDB20A 19470     CALL   0AB2H
1CE9 DF    19480      RST    1BH
1CEA 29    19490      DEFB   ')'
1CEB 49    19500      DEFB   WH-$-1
1CEC CDE60A 19510 FORSOR CALL PUTA
1CEF 1B2A  19520      JR     EXP2

1CF1 CF    19540 OUTP  RST    8         ; *** OUTPUT ***
1CF2 E5    19550      PUSH   HL
1CF3 CD0500 19560     CALL   5
1CF6 C1    19570      POP    BC
1CF7 ED69  19580      OUT    (C),L
1CF9 F7    19590      RST    30H

1CFA 4D    19610 INP   LD     C,L       ; *** INPUT ***
1CFB 44    19620      LD     B,H
1CFC ED68  19630      IN     L,(C)
1CFE 1803  19640      JR     FORDBD

1D00 CD1D19 19670 ASCII CALL   ASCX     ; *** ASCII CHARACTER IN NUMERIC EXPRESSION ***
1D03 C3B0DD 19680 FORDBD JP    0DDDH

1D06 CDB107 19700 SQR   CALL   781H     ; SQUARE ROOT
1D09 CD2F1B 19710      CALL   CP0
1D0C C8    19720      RET    Z
1D0D CD681B 19730      CALL   LOGIT2
1D10 21E91A 19740      LD     HL,C1
1D13 CD450A 19750      CALL   0A45H
1D16 18D4  19760      JR     FORSOR

1D18 CDB107 19780 EXP   CALL   781H     ; E TO THE POWER OF X
1D1B CDFC1B 19790 EXP2  CALL   ARSA
1D1E 17    19800      RLA
1D1F F5    19810      PUSH   AF

; 011108
1D20 CD221B    19820        CALL    DUBLIX
1D23 CD6D0A    19830        CALL    0A6DH
1D26 E5        19840        PUSH    HL
1D27 CD8C0A    19850        CALL    0ABCH
1D2A CD1E0B    19860        CALL    MINUS
1D2D EF        19870        RST     28H
1D2E 23        19880        INC     HL
1D2F CD8C0A    19890        CALL    0ABCH
1D32 E1        19900        POP     HL
1D33 7C        19910        LD      A,H
1D34 B7        19920        OR      A
1D35 C256A6    19930 WH     JP      NZ,65AH
1D38 B5        19940        OR      L
1D39 280B      19950        JR      Z,NOLOOP
1D3B E5        19960 DOHL   PUSH    HL
1D3C 21D51A    19970        LD      HL,CE1
1D3F CDF31B    19980        CALL    PUTAHL
1D42 E1        19990        POP     HL
1D43 2D        20000        DEC     L
1D44 20F5      20010        JR      NZ,DOHL
1D46 21D91A    20020 NOLOOP LD      HL,CE2
1D49 E5        20030        PUSH    HL
1D4A CD450A    20040        CALL    0A45H
1D4D E1        20050        POP     HL
1D4E 0606      20060        LD      B,6
1D50 C5        20070 EXP6   PUSH    BC
1D51 23        20080        INC     HL
1D52 23        20090        INC     HL
1D53 23        20100        INC     HL
1D54 23        20110        INC     HL
1D55 E5        20120        PUSH    HL
1D56 CD561B    20130        CALL    ISPOD3
1D59 CDE60A    20140        CALL    PUTA
1D5C E1        20150        POP     HL
1D5D E5        20160        PUSH    HL
1D5E CD041C    20170        CALL    PLUSHL
1D61 E1        20180        POP     HL
1D62 C1        20190        POP     BC
1D63 10EB      20200        DJNZ    EXP6
1D65 CDE60A    20210        CALL    PUTA
1D68 F1        20220        POP     AF
1D69 D2C81C    20230        JP      NC,MOVE0
1D6C CD461B    20240        CALL    IXM10
1D6F 21ED1A    20250        LD      HL,C7
1D72 CD450A    20260        CALL    0A45H
1D75 CD481B    20270        CALL    IX5
1D78 C3F70A    20280        JP      KROZ

1D7B CD450A    20300 MINHL  CALL    0A45H
1D7E C31E0B    20310        JP      MINUS

1D81 CDF91B    20330 ATN    CALL    ABS        ; ARCUS TANGENS
1D84 17        20340        RLA
1D85 F5        20350        PUSH    AF
1D86 CD2F1B    20360        CALL    CP0
1D89 CA971C    20370        JP      Z,NCOPY
1D8C CD3B1B    20380        CALL    CP1
1D8F F5        20390        PUSH    AF
1D90 3812      20400        JR      C,NEKROZ
1D92 CD221B    20410        CALL    DUBLIX
1D95 CD481B    20420        CALL    IXM10
1D98 21ED1A    20430        LD      HL,C7
1D9B CD450A    20440        CALL    0A45H
1D9E CD481B    20450        CALL    IX5
1DA1 CDF70A    20460        CALL    KROZ
1DA4 CD1F1B    20470 NEKROZ CALL    DUBL2

; 011109
1DA7 CDE60A 20480      CALL    PUTA
1DAA EF     20490      RST     28H
1DAB CDBC0A 20500      CALL    0ABCH
1DAE 21F51A 20510      LD      HL,CT1
1DB1 0608   20520      LD      B,8
1DB3 C5     20530 TAYLB PUSH    BC
1DB4 E5     20540      PUSH    HL
1DB5 CDD41C 20550      CALL    PLUSHL
1DB8 CD511B 20560      CALL    ISPOD2
1DBB CDE60A 20570      CALL    PUTA
1DBE E1     20580      POP     HL
1DBF 23     20590      INC     HL
1DC0 23     20600      INC     HL
1DC1 23     20610      INC     HL
1DC2 23     20620      INC     HL
1DC3 C1     20630      POP     BC
1DC4 10ED   20640      DJNZ    TAYLB
1DC6 21ED1A 20650      LD      HL,C7
1DC9 CDD41C 20660      CALL    PLUSHL
1DCC CD561B 20670      CALL    ISPOD3
1DCF CDE60A 20680      CALL    PUTA
1DD2 F1     20690      POP     AF
1DD3 3812   20700      JR      C,YLTH1
1DD5 CD221B 20710      CALL    DUBLIX
1DD8 CD461B 20720      CALL    IXM10
1DDB 21B51A 20730      LD      HL,PIPOLA
1DDE CD450A 20740      CALL    0A45H
1DE1 CD4B1B 20750      CALL    IX5
1DE4 CD1E0B 20760      CALL    MINUS
1DE7 F1     20770 YLTH1 POP     AF
1DE8 3004   20780      JR      NC,XGTH0
1DEA DDCBFFFE 20790    SET     7,(IX-1)
1DEE C3C51C 20800 XGTH0 JP      MOVE02
              20810
1DF1      20820 TEXT1  EQU     $            ; New BASIC commands table
1DF1 4C     20830      DEFM    'LPRINT'
1DF2 50
1DF3 52
1DF4 49
1DF5 4E
1DF6 54
1DF7 90     20840      DEFB    LPRINT<-8+80H
1DF8 5C     20850      DEFB    LPRINT&0FFH
1DF9 4C     20860      DEFM    'LLIST'
1DFA 4C
1DFB 49
1DFC 53
1DFD 54
1DFE 90     20870      DEFB    LLIST<-8+80H
1DFF 66     20880      DEFB    LLIST&0FFH
1E00 4F     20890      DEFM    'OUT'
1E01 55
1E02 54
1E03 9C     20900      DEFB    OUTP<-8+80H
1E04 F1     20910      DEFB    OUTP&0FFH
1E05 3C     20920      DEFM    '<'
1E06 90     20930      DEFB    GOASS<-8+80H
1E07 A7     20940      DEFB    GOASS&0FFH
1E08 2F     20950      DEFM    '/'
1E09 9A     20960      DEFB    FIND<-8+80H
1E0A 4A     20970      DEFB    FIND&0FFH
1E0B 52     20980      DEFM    'REN'
1E0C 45
1E0D 4E
1E0E 9A     20990      DEFB    NAME<-8+80H
1E0F 1A     21000      DEFB    NAME&0FFH

; 011110
1E10 4C        21010      DEFM    'LDUMP'
1E11 44
1E12 55
1E13 4D
1E14 50
1E15 9A        21020      DEFB    LDUMP<-8+80H
1E16 90        21030      DEFB    LDUMP&0FFH
1E17 44        21040      DEFM    'DUMP'
1E18 55
1E19 4D
1E1A 50
1E1B 9A        21050      DEFB    DUMP<-8+80H
1E1C 93        21060      DEFB    DUMP&0FFH
1E1D 44        21070      DEFM    'DEL'
1E1E 45
1E1F 4C
1E20 9F        21080      DEFB    DEL<-8+80H
1E21 FB        21090      DEFB    DEL&0FFH
1E22 90        21100      DEFB    KA075B<-8+80H
1E23 1F        21110      DEFB    KA075B&0FFH
              21120
1E24 53        21130 TEXT3 DEFM    'SOR'        ; TABLE OF NEW FUNCTIONS FOR BASIC
1E25 51
1E26 52
1E27 9D        21140      DEFB    SOR<-8+80H
1E28 06        21150      DEFB    SOR&0FFH
1E29 4C        21160      DEFM    'LN'
1E2A 4E
1E2B 9B        21170      DEFB    LOG<-8+80H
1E2C 68        21180      DEFB    LOG&0FFH
1E2D 41        21190      DEFM    'ABS'
1E2E 42
1E2F 53
1E30 9B        21200      DEFB    ABS<-8+80H
1E31 F9        21210      DEFB    ABS&0FFH
1E32 53        21220      DEFM    'SIN'
1E33 49
1E34 4E
1E35 9D        21230      DEFB    SIN<-8+80H
1E36 30        21240      DEFB    SIN&0FFH
1E37 43        21250      DEFM    'COS'
1E38 4F
1E39 53
1E3A 9C        21260      DEFB    COS<-8+80H
1E3B 24        21270      DEFB    COS&0FFH
1E3C 54        21280      DEFM    'TG'
1E3D 47
1E3E 9C        21290      DEFB    TAN<-8+80H
1E3F 04        21300      DEFB    TAN&0FFH
1E40 41        21310      DEFM    'ARCTG'
1E41 52
1E42 43
1E43 54
1E44 47
1E45 9D        21320      DEFB    ATN<-8+80H
1E46 81        21330      DEFB    ATN&0FFH
1E47 50        21340      DEFM    'PI'
1E48 49
1E49 9B        21350      DEFB    PI<-8+80H
1E4A 19        21360      DEFB    PI&0FFH
1E4B 45        21370      DEFM    'EXP'
1E4C 58
1E4D 50
1E4E 9D        21380      DEFB    EXP<-8+80H
1E4F 18        21390      DEFB    EXP&0FFH
1E50 50        21400      DEFM    'POW'

; 011111
1E51 4F
1E52 57
1E53 9C      21410    DEFB    POW<-8+80H
1E54 DA      21420    DEFB    POW&0FFH
1E55 49      21430    DEFM    'INP'
1E56 4E
1E57 50
1E58 DC      21440    DEFB    INP<-8+80H+40H
1E59 FA      21450    DEFB    INP&0FFH
1E5A 22      21460    DEFM    '"'
1E5B 7D      21470    DEFB    ASCII<-8+80H
1E5C 00      21480    DEFB    ASCII&0FFH
1E5D 90      21490    DEFB    KA0777<-8+80H
1E5E 59      21500    DEFB    KA0777&0FFH
                21510
1E5F 0810    21520 TAB4    DEFW    1000H        ; CPU Instructions
1E61 0818    21530         DEFW    1808H        ; RRC RR
1E63 2028    21540         DEFW    2820H        ; SLA SRA
1E65 3840    21550         DEFW    4038H        ; SRL BIT
1E67 C080    21560         DEFW    80C0H        ; SET RES
1E69 00      21570         DEFB    0            ; Table Terminator
                21580
1E6A 8088    21590 TAB5    DEFW    0888H        ; 8-bit Arithmetic
1E6C 9890    21600         DEFW    0909H        ; SBC SUB
1E6E A0B0    21610         DEFW    0B0A0H       ; AND OR
1E70 A8B8    21620         DEFW    0B8A8H       ; XOR CP
1E72 00      21630         DEFB    0            ; Table Terminator
                21640
1E73 89AA    21650 TAB6    DEFW    4A89H        ; 16-bit Arithmetic
1E75 42      21660         DEFB    42H          ; SBC
                21670
1E76 1000    21680 TABJP   DEFW    0010H        ; Conditional and Unconditional Jumps
1E78 1820    21690         DEFW    0218H        ; JR
1E7A C3C2    21700         DEFW    0C2C3H       ; JP
1E7C CDC4    21710         DEFW    0C4CDH       ; CALL
                21720
1E7E 002F    21730 TABY1   DEFW    02F00H       ; Simple Instructions
1E80 3F37    21740         DEFW    0373FH
1E82 76F3    21750         DEFW    0F376H
1E84 FBD9    21760         DEFW    0D9FBH
1E86 0717    21770         DEFW    01707H
1E88 0F1F    21780         DEFW    01F0FH
1E8A 27      21790         DEFB    27H
1E8B B0A0    21800         DEFW    0A0B0H       ; ED Instructions
1E8D B8A8    21810         DEFW    0A8B8H
1E8F B1A1    21820         DEFW    0A1B1H
1E91 B9A9    21830         DEFW    0A9B9H
1E93 B2A2    21840         DEFW    0A2B2H
1E95 B0A0    21850         DEFW    0A6B0H
1E97 B3A3    21860         DEFW    0A3B3H
1E99 BBAB    21870         DEFW    0ABBBH
1E9B 44AD    21880         DEFW    04D44H
1E9D 456F    21890         DEFW    06F45H
1E9F 67      21900         DEFB    67H
1EA0 00      21910         DEFB    0            ; Table Terminator
                21920
1EA1 0E0F    21930 TESTAB  DEFW    0F0EH        ; A,I (LOAD)
1EA3 57      21940         DEFB    57H
1EA4 0F0E    21950         DEFW    0E0FH        ; I,A
1EA6 47      21960         DEFB    47H
1EA7 0E10    21970         DEFW    100EH        ; A,R
1EA9 5F      21980         DEFB    5FH
1EAA 100E    21990         DEFW    0E10H        ; R,A
1EAC 4F      22000         DEFB    4FH
1EAD 0E84    22010         DEFW    840EH        ; A,(BC)
1EAF 0A      22020         DEFB    0AH

; 011112
1EB0 0EB5    22030    DEFW    850EH        A,(DE)
1EB2 1A      22040    DEFB    1AH
1EB3 840E    22050    DEFW    0E84H        (BC),A
1EB5 02      22060    DEFB    02H
1EB6 850E    22070    DEFW    0E85H        (DE),A
1EB8 12      22080    DEFB    12H
1EB9 0786    22090    DEFW    0607H        SP,HL
1EBB F9      22100    DEFB    0F9H
1EBC 0EC0    22110    DEFW    0C00EH       A,(NN)
1EBE 3A      22120    DEFB    3AH
1EBF C00E    22130    DEFW    0EC0H        (NN),A
1EC1 32      22140    DEFB    32H
               22150
1EC2 0704    22160 TEST2    DEFW    087H   (SP),HL    ; EXCHANGE
1EC4 E3      22170    DEFB    0E3H
1EC5 0303    22180    DEFW    303H         AF,AF'
1EC7 08      22190    DEFB    008H
1EC8 0506    22200    DEFW    605H         DE,HL
1ECA EB      22210    DEFB    0EBH
               22220
1ECB D2      22230 TABEL1   DEFB    'R'+80H    ; GROUP 1: COMMANDS
1ECC 45      22240    DEFM    'EG'
1ECD 47
1ECE D4      22250    DEFB    'T'+80H
1ECF 45      22260    DEFM    'EXT'
1ED0 58
1ED1 54
1ED2 D7      22270    DEFB    'W'+80H
1ED3 4F      22280    DEFM    'ORD'
1ED4 52
1ED5 44
1ED6 C2      22290    DEFB    'B'+80H
1ED7 59      22300    DEFM    'YTE'
1ED8 54
1ED9 45
1EDA CF      22310    DEFB    'O'+80H
1EDB 50      22320    DEFM    'PT'
1EDC 54
1EDD CF      22330    DEFB    'O'+80H
1EDE 52      22340    DEFM    'RG'
1EDF 47
1EE0 C5      22350    DEFB    'E'+80H
1EE1 51      22360    DEFM    'QU'
1EE2 55
1EE3 BE      22370    DEFB    '>'+80H
1EE4 CE      22380    DEFB    'N'+80H      ; GROUP 2: SIMPLE INSTRUCTIONS
1EE5 4F      22390    DEFM    'OP'
1EE6 50
1EE7 C3      22400    DEFB    'C'+80H
1EE8 50      22410    DEFM    'PL'
1EE9 4C
1EEA C3      22420    DEFB    'C'+80H
1EEB 43      22430    DEFM    'CF'
1EEC 46
1EED D3      22440    DEFB    'S'+80H
1EEE 43      22450    DEFM    'CF'
1EEF 46
1EF0 C8      22460    DEFB    'H'+80H
1EF1 41      22470    DEFM    'ALT'
1EF2 4C
1EF3 54
1EF4 C4      22480    DEFB    'D'+80H
1EF5 49      22490    DEFM    'I'
1EF6 C5      22500    DEFB    'E'+80H
1EF7 49      22510    DEFM    'I'
1EF8 C5      22520    DEFB    'E'+80H

; 011113
1EF9 5B      22530    DEFM    'XX'
1EFA 5B  
1EFB D2      22540    DEFB    'R'+80H
1EFC 4C      22550    DEFM    'LCA'
1EFD 43
1EFE 41
1EFF D2      22560    DEFB    'R'+80H
1F00 4C      22570    DEFM    'LA'
1F01 41
1F02 D2      22580    DEFB    'R'+80H
1F03 52      22590    DEFM    'RCA'
1F04 43
1F05 41
1F06 D2      22600    DEFB    'R'+80H
1F07 52      22610    DEFM    'RA'
1F08 41
1F09 C4      22620    DEFB    'D'+80H
1F0A 41      22630    DEFM    'AA'
1F0B 41

1F0C CC      22650    DEFB    'L'+80H    ; Group 3: ED+
1F0D 44      22660    DEFM    'DIR'
1F0E 49
1F0F 52

1F10 CC      22670    DEFB    'L'+80H
1F11 44      22680    DEFM    'DI'
1F12 49

1F13 CC      22690    DEFB    'L'+80H
1F14 44      22700    DEFM    'DDR'
1F15 44
1F16 52

1F17 CC      22710    DEFB    'L'+80H
1F18 44      22720    DEFM    'DD'
1F19 44

1F1A C3      22730    DEFB    'C'+80H
1F1B 50      22740    DEFM    'PIR'
1F1C 49
1F1D 52

1F1E C3      22750    DEFB    'C'+80H
1F1F 50      22760    DEFM    'PI'
1F20 49

1F21 C3      22770    DEFB    'C'+80H
1F22 50      22780    DEFM    'PDR'
1F23 44
1F24 52

1F25 C3      22790    DEFB    'C'+80H
1F26 50      22800    DEFM    'PD'
1F27 44

1F28 C9      22810    DEFB    'I'+80H
1F29 4E      22820    DEFM    'NIR'
1F2A 49
1F2B 52

1F2C C9      22830    DEFB    'I'+80H
1F2D 4E      22840    DEFM    'NI'
1F2E 49

1F2F C9      22850    DEFB    'I'+80H
1F30 4E      22860    DEFM    'NDR'
1F31 44
1F32 52

1F33 C9      22870    DEFB    'I'+80H
1F34 4E      22880    DEFM    'ND'
1F35 44

1F36 CF      22890    DEFB    'O'+80H
1F37 54      22900    DEFM    'TIR'
1F38 49
1F39 52

; 011114
1F3A CF    22910    DEFB    'O'+80H
1F3B 55    22920    DEFM    'UTI'
1F3C 54
1F3D 49
1F3E CF    22930    DEFB    'O'+80H
1F3F 54    22940    DEFM    'TDR'
1F40 44
1F41 52
1F42 CF    22950    DEFB    'O'+80H
1F43 55    22960    DEFM    'UTD'
1F44 54
1F45 44
1F46 CE    22970    DEFB    'N'+80H
1F47 45    22980    DEFM    'EG'
1F48 47
1F49 D2    22990    DEFB    'R'+80H
1F4A 45    23000    DEFM    'ETI'
1F4B 54
1F4C 49
1F4D D2    23010    DEFB    'R'+80H
1F4E 45    23020    DEFM    'ETN'
1F4F 54
1F50 4E
1F51 D2    23030    DEFB    'R'+80H
1F52 4C    23040    DEFM    'LD'
1F53 44
1F54 D2    23050    DEFB    'R'+80H
1F55 52    23060    DEFM    'RD'
1F56 44

1F57 D2    23080    DEFB    'R'+80H    ; GROUP 4: BIT ROTATION AND MANIPULATION
1F58 4C    23090    DEFM    'LC'
1F59 43
1F5A D2    23100    DEFB    'R'+80H
1F5B 4C    23110    DEFM    'L'
1F5C D2    23120    DEFB    'R'+80H
1F5D 52    23130    DEFM    'RC'
1F5E 43
1F5F D2    23140    DEFB    'R'+80H
1F60 52    23150    DEFM    'R'
1F61 D3    23160    DEFB    'S'+80H
1F62 4C    23170    DEFM    'LA'
1F63 41
1F64 D3    23180    DEFB    'S'+80H
1F65 52    23190    DEFM    'RA'
1F66 41
1F67 D3    23200    DEFB    'S'+80H
1F68 52    23210    DEFM    'RL'
1F69 4C
1F6A C2    23220    DEFB    'B'+80H
1F6B 49    23230    DEFM    'IT'
1F6C 54
1F6D D3    23240    DEFB    'S'+80H
1F6E 45    23250    DEFM    'ET'
1F6F 54
1F70 D2    23260    DEFB    'R'+80H
1F71 45    23270    DEFM    'ES'
1F72 53

1F73 C1    23290    DEFB    'A'+80H    ; GROUP 5: ARITHMETIC AND LOGIC
1F74 44    23300    DEFM    'DD'
1F75 44
1F76 C1    23310    DEFB    'A'+80H
1F77 44    23320    DEFM    'DC'
1F78 43
1F79 D3    23330    DEFB    'S'+80H

; 011115
1F7A 42    23340        DEFM    'BC'
1F7B 43
1F7C D3    23350        DEFB    'S'+80H
1F7D 55    23360        DEFM    'UB'
1F7E 42
1F7F C1    23370        DEFB    'A'+80H
1F80 4E    23380        DEFM    'ND'
1F81 44
1F82 CF    23390        DEFB    'O'+80H
1F83 52    23400        DEFM    'R'
1F84 D8    23410        DEFB    'X'+80H
1F85 4F    23420        DEFM    'OR'
1F86 52
1F87 C3    23430        DEFB    'C'+80H
1F88 50    23440        DEFM    'P'
1F89 C9    23450        DEFB    'I'+80H    ; Group 6: Increment - Decrement
1F8A 4E    23460        DEFM    'NC'
1F8B 43
1F8C C4    23470        DEFB    'D'+80H
1F8D 45    23480        DEFM    'EC'
1F8E 43
1F8F CC    23490        DEFB    'L'+80H    ; Group 7: Load and Exchange
1F90 44    23500        DEFM    'D'
1F91 C5    23510        DEFB    'E'+80H
1F92 58    23520        DEFM    'X'
1F93 C9    23530        DEFB    'I'+80H    ; Group 8: Input - Output
1F94 4E    23540        DEFM    'N'
1F95 CF    23550        DEFB    'O'+80H
1F96 55    23560        DEFM    'UT'
1F97 54
1F98 C4    23570        DEFB    'D'+80H    ; Group 9: Jumps
1F99 4A    23580        DEFM    'JNZ'
1F9A 4E
1F9B 5A
1F9C CA    23590        DEFB    'J'+80H
1F9D 52    23600        DEFM    'R'
1F9E CA    23610        DEFB    'J'+80H
1F9F 50    23620        DEFM    'P'
1FA0 C3    23630        DEFB    'C'+80H
1FA1 41    23640        DEFM    'ALL'
1FA2 4C
1FA3 4C
1FA4 D2    23650        DEFB    'R'+80H
1FA5 45    23660        DEFM    'ET'
1FA6 54
1FA7 D2    23670        DEFB    'R'+80H    ; Group 10: Return - Interrupt
1FA8 53    23680        DEFM    'ST'
1FA9 54
1FAA C9    23690        DEFB    'I'+80H
1FAB 4D    23700        DEFM    'M'
1FAC D0    23710        DEFB    'P'+80H    ; Group 11: Push - Pop
1FAD 4F    23720        DEFM    'OP'
1FAE 50
1FAF D0    23730        DEFB    'P'+80H
1FB0 55    23740        DEFM    'USH'
1FB1 53
1FB2 48
1FB3 80    23750        DEFB    80H
               23760
1FB4 C9    23770 TABEL2 DEFB    'I'+80H    ; Table 2: OPERANDS
1FB5 58    23780        DEFM    'X'
1FB6 C9    23790        DEFB    'I'+80H
1FB7 59    23800        DEFM    'Y'
1FB8 C1    23810        DEFB    'A'+80H
1FB9 46    23820        DEFM    'F'
1FBA C2    23830        DEFB    'B'+80H

; 011116
1FB8 43      23840      DEFM    'C'
1FBC C4      23850      DEFB    'D'+80H
1FBD 45      23860      DEFM    'E'
1FBE C8      23870      DEFB    'H'+80H
1FBF 4C      23880      DEFM    'L'
1FC0 D3      23890      DEFB    'S'+80H
1FC1 50      23900      DEFM    'P'
1FC2 C2      23910      DEFB    'B'+80H
1FC3 C3      23920      DEFB    'C'+80H
1FC4 C4      23930      DEFB    'D'+80H
1FC5 C5      23940      DEFB    'E'+80H
1FC6 C8      23950      DEFB    'H'+80H
1FC7 CC      23960      DEFB    'L'+80H
1FC8 C1      23970      DEFB    'A'+80H
1FC9 C9      23980      DEFB    'I'+80H
1FCA D2      23990      DEFB    'R'+80H
1FCB CE      24000      DEFB    'N'+80H
1FCC 5A      24010      DEFM    'Z'
1FCD DA      24020      DEFB    'Z'+80H
1FCE CE      24030      DEFB    'N'+80H
1FCF 43      24040      DEFM    'C'
1FD0 C3      24050      DEFB    'C'+80H
1FD1 D0      24060      DEFB    'P'+80H
1FD2 4F      24070      DEFM    'O'
1FD3 D0      24080      DEFB    'P'+80H
1FD4 45      24090      DEFM    'E'
1FD5 D0      24100      DEFB    'P'+80H
1FD6 CD      24110      DEFB    'M'+80H
1FD7 80      24120      DEFB    80H
               24130
1FD8 20      24140 NASLOV DEFM    ' AF   BC   DE   HL   IXIY SP()'
1FD9 20
1FDA 41
1FDB 46
1FDC 20
1FDD 20
1FDE 20
1FDF 42
1FE0 43
1FE1 20
1FE2 20
1FE3 20
1FE4 44
1FE5 45
1FE6 20
1FE7 20
1FE8 20
1FE9 48
1FEA 4C
1FEB 20
1FEC 20
1FED 49
1FEE 58
1FEF 49
1FF0 59
1FF1 20
1FF2 53
1FF3 50
1FF4 28
1FF5 29
1FF6 0D      24150      DEFB    0DH
               24151
1FF7 3A0D2B  24152 EXTRA LD      A,(INS1)
1FFA FE45    24153      CP      45H      ; Will it open JP?

; 011117
1FFC C8    24154      RET     Z           ; RETURN IF IS STILL
1FFD 34    24155      INC     (HL)
1FFE C9    24156      RET                 ; AND IF NOT, INCREASE NUMBER OF BYTES
1FFF       24157
1FFF       24160      ORG     1FFFH
1FFF 05    24190      DEFB    5           ; VERSION 5
0000       24200      END

; 00000 TOTAL ERRORS

